---
format:
  html:
    toc: true
    toc-depth: 4
    theme: [cosmo, notebooks/custom.scss]
    output-file: stdlang_book.walkthrough_js.html
code-block-background: true
fontsize: 0.9em

---
<style></style><style>.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style><style>.clay-limit-image-width .clay-image {max-width: 100%}
.clay-side-by-side .sourceCode {margin: 0}
.clay-side-by-side {margin: 1em 0}
</style>
<script src="stdlang_book.walkthrough_js_files/md-default0.js" type="text/javascript"></script><script src="stdlang_book.walkthrough_js_files/md-default1.js" type="text/javascript"></script>

# Javascript Walkthrough

Welcome to the walkthrough of std.lang and it's interaction with the javascript runtime.
Ideally, the reader should have at least some experience with both clojure and javascript
in order to get the most out of the tutorial as the library allows for seamless interop between
a clojure runtime and a javascript one - whether it is on the server side - node, quickjs, osascript - as well as on the browser and other embedded js environments.



## Setup

Let us briefly explore the std.lang transpiler.


::: {.sourceClojure}
```clojure
(ns stdlang-book.walkthrough-js
  (:require [std.lang :as l]))
```
:::


std.lang can be used in different ways:
- generate code for different languages
- run the code in different runtimes of those languages

To specify a way to use it, we use `l/script`. This will create a runtime
for evaluation.


::: {.sourceClojure}
```clojure
^:kind/println
(l/script :js
  {:require [[xt.lang.base-lib :as k]]})
```
:::



::: {.printedClojure}
```clojure
#rt:lang[:js]

```
:::


It is now possible to transpile lisp forms to code:


::: {.sourceClojure}
```clojure
(!.js
  (+ 1 2 3))
```
:::



::: {.printedClojure}
```clojure
"1 + 2 + 3;"

```
:::


If more than one environment is required, `l/script+` is a way to create an annex
that 

In For example, let us define the following two annexes, named `:code` and `:live`.

Here we define `:code` as a way to use the transpiler
to generate Javascript code, but not use it in any runtime.


::: {.sourceClojure}
```clojure
^:kind/println
(l/script+ [:code :js]
  {:require [[xt.lang.base-lib :as k]]})
```
:::



::: {.printedClojure}
```clojure
[#rt:lang[:js]]

```
:::


Here we define `:live` as a way to use the transpiler
go generate Javascript code, and run it in a Node.js runtime.


::: {.sourceClojure}
```clojure
^:kind/println
(l/script+ [:live :js]
  {:runtime :basic
   :require [[xt.lang.base-lib :as k]]})
```
:::



::: {.printedClojure}
```clojure
[#rt.basic[:server/basic :js 1jyb01ntw3yox 53477 1]]

```
:::


Let us now use these two ways for basic arithmetic.


::: {.sourceClojure}
```clojure
[ ;; No runtime, just generating code:
 (l/! [:code] (+ 1 2))
 ;; Generating, running in Node.js:
 (l/! [:live] (+ 1 2))]
```
:::



::: {.printedClojure}
```clojure
["1 + 2;" 3]

```
:::



# Types


## Types - Primitives

The seven primitive data types in JavaScript are string, number, bigint, boolean, undefined, symbol, and null.
We work with examples from: https://www.w3docs.com/learn-javascript/methods-of-primitives.html

From the Javascript Runtime perspective, primitives are extremely important to understand for designing fast programs. They offer the following traits:

1. Immutability: Once a primitive value is created, it cannot be altered. For instance, when you create a string, you cannot change its individual characters. Any operation that seems to change a primitive actually creates a new primitive. Example:
2. Memory Efficiency: Primitives are stored directly in the stack memory where the variable is located. This direct storage makes access to primitive values faster and more memory-efficient than objects. Example:
3. Simple and Fast: Primitives are straightforward in their representation, making them simpler and faster to process compared to objects. They don't have the overhead of object properties and methods. Example:


### Null

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
nil
```"></span></td><td><span data-qmd="```js
null;
```"></span></td><td><span data-qmd="```clj
nil
```"></span></td></tr></tbody></table>
```

:::



### Undefined

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
undefined
```"></span></td><td><span data-qmd="```js
undefined;
```"></span></td><td><span data-qmd="```clj
nil
```"></span></td></tr></tbody></table>
```

:::



### Boolean

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
true
```"></span></td><td><span data-qmd="```js
true;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
false
```"></span></td><td><span data-qmd="```js
false;
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr></tbody></table>
```

:::



### Strings

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
&quot;3&quot;
```"></span></td><td><span data-qmd="```js
&quot;3&quot;;
```"></span></td><td><span data-qmd="```clj
&quot;3&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
&quot;Hello World&quot;
```"></span></td><td><span data-qmd="```js
&quot;Hello World&quot;;
```"></span></td><td><span data-qmd="```clj
&quot;Hello World&quot;
```"></span></td></tr></tbody></table>
```

:::



### Numbers

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
3
```"></span></td><td><span data-qmd="```js
3;
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr><tr><td><span data-qmd="```clj
1.5
```"></span></td><td><span data-qmd="```js
1.5;
```"></span></td><td><span data-qmd="```clj
1.5
```"></span></td></tr><tr><td><span data-qmd="```clj
1.54444444444444
```"></span></td><td><span data-qmd="```js
1.54444444444444;
```"></span></td><td><span data-qmd="```clj
1.54444444444444
```"></span></td></tr><tr><td><span data-qmd="```clj
NaN
```"></span></td><td><span data-qmd="```js
NaN;
```"></span></td><td><span data-qmd="```clj
nil
```"></span></td></tr><tr><td><span data-qmd="```clj
Infinity
```"></span></td><td><span data-qmd="```js
Infinity;
```"></span></td><td><span data-qmd="```clj
nil
```"></span></td></tr><tr><td><span data-qmd="```clj
(- Infinity)
```"></span></td><td><span data-qmd="```js
-Infinity;
```"></span></td><td><span data-qmd="```clj
&quot;-Infinity&quot;
```"></span></td></tr></tbody></table>
```

:::



### Bigint

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(. (BigInt &quot;0x1fffffffffffff&quot;) (toString))
```"></span></td><td><span data-qmd="```js
BigInt(&quot;0x1fffffffffffff&quot;).toString();
```"></span></td><td><span data-qmd="```clj
&quot;9007199254740991&quot;
```"></span></td></tr></tbody></table>
```

:::



### Symbol

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(. (Symbol &quot;hello&quot;) (toString))
```"></span></td><td><span data-qmd="```js
Symbol(&quot;hello&quot;).toString();
```"></span></td><td><span data-qmd="```clj
&quot;Symbol(hello)&quot;
```"></span></td></tr></tbody></table>
```

:::



## Types - Additional


### Regex

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
#&quot;^[Hh]ello d$&quot;
```"></span></td><td><span data-qmd="```js
/^[Hh]ello d$/;
```"></span></td><td><span data-qmd="```clj
&lt;RegExp&gt;
/^[Hh]ello d$/
```"></span></td></tr></tbody></table>
```

:::



## Types - Collection


### Arrays

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[1 2 3 4]
```"></span></td><td><span data-qmd="```js
[1,2,3,4];
```"></span></td><td><span data-qmd="```clj
[1 2 3 4]
```"></span></td></tr><tr><td><span data-qmd="```clj
[&quot;hello&quot; [&quot;world&quot;]]
```"></span></td><td><span data-qmd="```js
[&quot;hello&quot;,[&quot;world&quot;]];
```"></span></td><td><span data-qmd="```clj
[&quot;hello&quot; [&quot;world&quot;]]
```"></span></td></tr></tbody></table>
```

:::



### Objects

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
{:a 1, :b 2, :c 3}
```"></span></td><td><span data-qmd="```js
{&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3};
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;b&quot; 2, &quot;c&quot; 3}
```"></span></td></tr><tr><td><span data-qmd="```clj
{:a {:b {:c 3}}}
```"></span></td><td><span data-qmd="```js
{&quot;a&quot;:{&quot;b&quot;:{&quot;c&quot;:3}}};
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; {&quot;b&quot; {&quot;c&quot; 3}}}
```"></span></td></tr></tbody></table>
```

:::



### Objects - tab

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(tab [&quot;a&quot; 1] [&quot;b&quot; 2] [&quot;c&quot; 3])
```"></span></td><td><span data-qmd="```js
{&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3};
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;b&quot; 2, &quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



## Types - Checks


### Typeof

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(typeof nil)
```"></span></td><td><span data-qmd="```js
typeof null;
```"></span></td><td><span data-qmd="```clj
&quot;object&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(typeof undefined)
```"></span></td><td><span data-qmd="```js
typeof undefined;
```"></span></td><td><span data-qmd="```clj
&quot;undefined&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(typeof NaN)
```"></span></td><td><span data-qmd="```js
typeof NaN;
```"></span></td><td><span data-qmd="```clj
&quot;number&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(typeof 1)
```"></span></td><td><span data-qmd="```js
typeof 1;
```"></span></td><td><span data-qmd="```clj
&quot;number&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(typeof true)
```"></span></td><td><span data-qmd="```js
typeof true;
```"></span></td><td><span data-qmd="```clj
&quot;boolean&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(typeof &quot;hello&quot;)
```"></span></td><td><span data-qmd="```js
typeof &quot;hello&quot;;
```"></span></td><td><span data-qmd="```clj
&quot;string&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(typeof (Symbol &quot;hello&quot;))
```"></span></td><td><span data-qmd="```js
typeof Symbol(&quot;hello&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;symbol&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(typeof (BigInt &quot;0x1fffffffffffff&quot;))
```"></span></td><td><span data-qmd="```js
typeof BigInt(&quot;0x1fffffffffffff&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;bigint&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(typeof #&quot;^[Hh]ello d$&quot;)
```"></span></td><td><span data-qmd="```js
typeof /^[Hh]ello d$/;
```"></span></td><td><span data-qmd="```clj
&quot;object&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(typeof [1 2 3])
```"></span></td><td><span data-qmd="```js
typeof [1,2,3];
```"></span></td><td><span data-qmd="```clj
&quot;object&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(typeof {:a 1})
```"></span></td><td><span data-qmd="```js
typeof {&quot;a&quot;:1};
```"></span></td><td><span data-qmd="```clj
&quot;object&quot;
```"></span></td></tr></tbody></table>
```

:::



### Instanceof

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(instanceof #&quot;^[Hh]ello d$&quot; RegExp)
```"></span></td><td><span data-qmd="```js
/^[Hh]ello d$/ instanceof RegExp;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



# Operations


## Operations - Assignment


### Var

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var x 1) x)
```"></span></td><td><span data-qmd="```js
let x = 1;
x;
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr></tbody></table>
```

:::



### Const

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (const x 1) x)
```"></span></td><td><span data-qmd="```js
const x = 1;
x;
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr></tbody></table>
```

:::



### Reassign

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var x 1) (:= x 10) x)
```"></span></td><td><span data-qmd="```js
let x = 1;
x = 10;
x;
```"></span></td><td><span data-qmd="```clj
10
```"></span></td></tr></tbody></table>
```

:::



## Operations - Logic


### Negation

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(not true)
```"></span></td><td><span data-qmd="```js
!true;
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr><tr><td><span data-qmd="```clj
(not false)
```"></span></td><td><span data-qmd="```js
!false;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(not 1)
```"></span></td><td><span data-qmd="```js
!1;
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr><tr><td><span data-qmd="```clj
(not 0)
```"></span></td><td><span data-qmd="```js
!0;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### Or

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(or 0 false)
```"></span></td><td><span data-qmd="```js
0 || false;
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr><tr><td><span data-qmd="```clj
(or 1 false)
```"></span></td><td><span data-qmd="```js
1 || false;
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr><tr><td><span data-qmd="```clj
(or 0 true)
```"></span></td><td><span data-qmd="```js
0 || true;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### And

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(and 0 false)
```"></span></td><td><span data-qmd="```js
0 &amp;&amp; false;
```"></span></td><td><span data-qmd="```clj
0
```"></span></td></tr><tr><td><span data-qmd="```clj
(and 1 false)
```"></span></td><td><span data-qmd="```js
1 &amp;&amp; false;
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr><tr><td><span data-qmd="```clj
(and 0 true)
```"></span></td><td><span data-qmd="```js
0 &amp;&amp; true;
```"></span></td><td><span data-qmd="```clj
0
```"></span></td></tr></tbody></table>
```

:::



### Ternary

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(:? true 1 2)
```"></span></td><td><span data-qmd="```js
true ? 1 : 2;
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr><tr><td><span data-qmd="```clj
(:? (or 0 0) 1 2)
```"></span></td><td><span data-qmd="```js
(0 || 0) ? 1 : 2;
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr></tbody></table>
```

:::



## Operations - Math


### Addition

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(+ 1 2 3)
```"></span></td><td><span data-qmd="```js
1 + 2 + 3;
```"></span></td><td><span data-qmd="```clj
6
```"></span></td></tr><tr><td><span data-qmd="```clj
(+ 1 10)
```"></span></td><td><span data-qmd="```js
1 + 10;
```"></span></td><td><span data-qmd="```clj
11
```"></span></td></tr></tbody></table>
```

:::



### Subtraction 

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(- 10)
```"></span></td><td><span data-qmd="```js
-10;
```"></span></td><td><span data-qmd="```clj
-10
```"></span></td></tr><tr><td><span data-qmd="```clj
(- 10 1.1)
```"></span></td><td><span data-qmd="```js
10 - 1.1;
```"></span></td><td><span data-qmd="```clj
8.9
```"></span></td></tr><tr><td><span data-qmd="```clj
(- 4 3 2 1.1)
```"></span></td><td><span data-qmd="```js
4 - 3 - 2 - 1.1;
```"></span></td><td><span data-qmd="```clj
-2.1
```"></span></td></tr></tbody></table>
```

:::



### Multiplication

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(* 10 20)
```"></span></td><td><span data-qmd="```js
10 * 20;
```"></span></td><td><span data-qmd="```clj
200
```"></span></td></tr><tr><td><span data-qmd="```clj
(* 4 3.3 2.2 1.1)
```"></span></td><td><span data-qmd="```js
4 * 3.3 * 2.2 * 1.1;
```"></span></td><td><span data-qmd="```clj
31.944000000000003
```"></span></td></tr></tbody></table>
```

:::



### Division

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(/ 10)
```"></span></td><td><span data-qmd="```js
1 / 10;
```"></span></td><td><span data-qmd="```clj
0.1
```"></span></td></tr><tr><td><span data-qmd="```clj
(/ 10 20)
```"></span></td><td><span data-qmd="```js
10 / 20;
```"></span></td><td><span data-qmd="```clj
0.5
```"></span></td></tr><tr><td><span data-qmd="```clj
(/ 4 3.3 2.2 1.1)
```"></span></td><td><span data-qmd="```js
4 / 3.3 / 2.2 / 1.1;
```"></span></td><td><span data-qmd="```clj
0.5008765339343851
```"></span></td></tr></tbody></table>
```

:::



### Pow

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(pow 10 2)
```"></span></td><td><span data-qmd="```js
10 ^ 2;
```"></span></td><td><span data-qmd="```clj
8
```"></span></td></tr><tr><td><span data-qmd="```clj
(pow 0.5 0.2)
```"></span></td><td><span data-qmd="```js
0.5 ^ 0.2;
```"></span></td><td><span data-qmd="```clj
0
```"></span></td></tr></tbody></table>
```

:::



### Mod

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(mod 1123 7)
```"></span></td><td><span data-qmd="```js
1123 % 7;
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr><tr><td><span data-qmd="```clj
(mod 1123 7.1)
```"></span></td><td><span data-qmd="```js
1123 % 7.1;
```"></span></td><td><span data-qmd="```clj
1.2000000000000561
```"></span></td></tr></tbody></table>
```

:::



## Operations - Comparison


### Equals

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(== 1 1)
```"></span></td><td><span data-qmd="```js
1 == 1;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(== 1 &quot;1&quot;)
```"></span></td><td><span data-qmd="```js
1 == &quot;1&quot;;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(== &quot;hello&quot; &quot;hello&quot;)
```"></span></td><td><span data-qmd="```js
&quot;hello&quot; == &quot;hello&quot;;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### Triple Equals

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(=== 1 1)
```"></span></td><td><span data-qmd="```js
1 === 1;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(=== 1 &quot;1&quot;)
```"></span></td><td><span data-qmd="```js
1 === &quot;1&quot;;
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr><tr><td><span data-qmd="```clj
(=== &quot;hello&quot; &quot;hello&quot;)
```"></span></td><td><span data-qmd="```js
&quot;hello&quot; === &quot;hello&quot;;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### Not Equals

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(not= 1 2)
```"></span></td><td><span data-qmd="```js
1 != 2;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(not= 1 &quot;1&quot;)
```"></span></td><td><span data-qmd="```js
1 != &quot;1&quot;;
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr><tr><td><span data-qmd="```clj
(not= &quot;hello&quot; &quot;hello&quot;)
```"></span></td><td><span data-qmd="```js
&quot;hello&quot; != &quot;hello&quot;;
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr></tbody></table>
```

:::



### Less Than

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(&lt; 1 2)
```"></span></td><td><span data-qmd="```js
1 &lt; 2;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(&lt; 1 1)
```"></span></td><td><span data-qmd="```js
1 &lt; 1;
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr><tr><td><span data-qmd="```clj
(&lt; 1 &quot;2&quot;)
```"></span></td><td><span data-qmd="```js
1 &lt; &quot;2&quot;;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### Less Than Equals

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(&lt;= 1 2)
```"></span></td><td><span data-qmd="```js
1 &lt;= 2;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(&lt;= 1 1)
```"></span></td><td><span data-qmd="```js
1 &lt;= 1;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(&lt;= 1 &quot;1&quot;)
```"></span></td><td><span data-qmd="```js
1 &lt;= &quot;1&quot;;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### Greater Than

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(&gt; 3 2)
```"></span></td><td><span data-qmd="```js
3 &gt; 2;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(&gt; 3 3)
```"></span></td><td><span data-qmd="```js
3 &gt; 3;
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr><tr><td><span data-qmd="```clj
(&gt; 3 &quot;2&quot;)
```"></span></td><td><span data-qmd="```js
3 &gt; &quot;2&quot;;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### Greater Than Equals

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(&gt;= 3 2)
```"></span></td><td><span data-qmd="```js
3 &gt;= 2;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(&gt;= 3 3)
```"></span></td><td><span data-qmd="```js
3 &gt;= 3;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(&gt;= 3 &quot;3&quot;)
```"></span></td><td><span data-qmd="```js
3 &gt;= &quot;3&quot;;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



## Operations - Counter


### Increment

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var x 1) (:++ x) x)
```"></span></td><td><span data-qmd="```js
let x = 1;
++x;
x;
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr></tbody></table>
```

:::



### Increment By

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var x 1) (:+= x 10) x)
```"></span></td><td><span data-qmd="```js
let x = 1;
x += 10;
x;
```"></span></td><td><span data-qmd="```clj
11
```"></span></td></tr></tbody></table>
```

:::



### Decrement

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var x 5) (:-- x) x)
```"></span></td><td><span data-qmd="```js
let x = 5;
--x;
x;
```"></span></td><td><span data-qmd="```clj
4
```"></span></td></tr></tbody></table>
```

:::



### Decrement By

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var x 5) (:-= x 50) x)
```"></span></td><td><span data-qmd="```js
let x = 5;
x -= 50;
x;
```"></span></td><td><span data-qmd="```clj
-45
```"></span></td></tr></tbody></table>
```

:::



### Multiply By

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var x 5) (:*= x 50) x)
```"></span></td><td><span data-qmd="```js
let x = 5;
x *= 50;
x;
```"></span></td><td><span data-qmd="```clj
250
```"></span></td></tr></tbody></table>
```

:::



## Operations - Bitwise


### Bitwise Or

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(b:| 7 8)
```"></span></td><td><span data-qmd="```js
7 | 8;
```"></span></td><td><span data-qmd="```clj
15
```"></span></td></tr><tr><td><span data-qmd="```clj
(b:| 7 7)
```"></span></td><td><span data-qmd="```js
7 | 7;
```"></span></td><td><span data-qmd="```clj
7
```"></span></td></tr><tr><td><span data-qmd="```clj
(b:| 7 0)
```"></span></td><td><span data-qmd="```js
7 | 0;
```"></span></td><td><span data-qmd="```clj
7
```"></span></td></tr></tbody></table>
```

:::



### Bitwise And

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(b:&amp; 7 8)
```"></span></td><td><span data-qmd="```js
7 &amp; 8;
```"></span></td><td><span data-qmd="```clj
0
```"></span></td></tr><tr><td><span data-qmd="```clj
(b:&amp; 7 7)
```"></span></td><td><span data-qmd="```js
7 &amp; 7;
```"></span></td><td><span data-qmd="```clj
7
```"></span></td></tr><tr><td><span data-qmd="```clj
(b:&amp; 7 0)
```"></span></td><td><span data-qmd="```js
7 &amp; 0;
```"></span></td><td><span data-qmd="```clj
0
```"></span></td></tr></tbody></table>
```

:::



### Bitwise Xor

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(b:xor 7 8)
```"></span></td><td><span data-qmd="```js
7 ^ 8;
```"></span></td><td><span data-qmd="```clj
15
```"></span></td></tr><tr><td><span data-qmd="```clj
(b:xor 7 7)
```"></span></td><td><span data-qmd="```js
7 ^ 7;
```"></span></td><td><span data-qmd="```clj
0
```"></span></td></tr><tr><td><span data-qmd="```clj
(b:xor 7 0)
```"></span></td><td><span data-qmd="```js
7 ^ 0;
```"></span></td><td><span data-qmd="```clj
7
```"></span></td></tr></tbody></table>
```

:::



### Bitshift Right

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(b:&gt;&gt; 128 3)
```"></span></td><td><span data-qmd="```js
128 &gt;&gt; 3;
```"></span></td><td><span data-qmd="```clj
16
```"></span></td></tr></tbody></table>
```

:::



### Bitshift Left

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(b:&lt;&lt; 128 3)
```"></span></td><td><span data-qmd="```js
128 &lt;&lt; 3;
```"></span></td><td><span data-qmd="```clj
1024
```"></span></td></tr></tbody></table>
```

:::



## Operations - Functions

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(fn [x y] (return (+ x y)))
```"></span></td><td><span data-qmd="```js
function (x,y){
  return x + y;
}
```"></span></td><td><span data-qmd="```clj
&lt;function&gt;
function (x,y){
    return x + y;
  }
```"></span></td></tr><tr><td><span data-qmd="```clj
(do (var hello (fn [x y] (return (+ x y)))) (hello 1 2))
```"></span></td><td><span data-qmd="```js
let hello = function (x,y){
  return x + y;
};
hello(1,2);
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr></tbody></table>
```

:::



## Operations - Blocks


### if block

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var arr [1 2 3 4 5]) (var out) (if (&lt; (x:len arr) 10) (:= out true) (:= out false)) out)
```"></span></td><td><span data-qmd="```js
let arr = [1,2,3,4,5];
let out = null;
if(arr.length &lt; 10){
  out = true;
}
else{
  out = false;
}
out;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### cond block

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var arr [1 2 3 4 5]) (var out) (cond (&lt; (x:len arr) 5) (:= out &quot;1&quot;) (&lt; (x:len arr) 10) (:= out &quot;2&quot;) :else (:= out &quot;3&quot;)) out)
```"></span></td><td><span data-qmd="```js
let arr = [1,2,3,4,5];
let out = null;
if(arr.length &lt; 5){
  out = &quot;1&quot;;
}
else if(arr.length &lt; 10){
  out = &quot;2&quot;;
}
else{
  out = &quot;3&quot;;
}
out;
```"></span></td><td><span data-qmd="```clj
&quot;2&quot;
```"></span></td></tr></tbody></table>
```

:::



### while block

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var x []) (var i 0) (while (&lt; i 5) (x:arr-push x i) (:++ i)) x)
```"></span></td><td><span data-qmd="```js
let x = [];
let i = 0;
while(i &lt; 5){
  x.push(i);
  ++i;
}
x;
```"></span></td><td><span data-qmd="```clj
[0 1 2 3 4]
```"></span></td></tr></tbody></table>
```

:::



### for block

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var arr []) (for [(var i 1) (&lt; i 5) (:++ i)] (x:arr-push arr i)) arr)
```"></span></td><td><span data-qmd="```js
let arr = [];
for(let i = 1; i &lt; 5; ++i){
  arr.push(i);
}
arr;
```"></span></td><td><span data-qmd="```clj
[1 2 3 4]
```"></span></td></tr></tbody></table>
```

:::



### case block

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var arr 1) (var out) (case arr 1 (do (:= out 1) (break)) 2 (do (:= out 2) (break))) out)
```"></span></td><td><span data-qmd="```js
let arr = 1;
let out = null;
switch(arr){
  case 1:
    out = 1;
    break;
  
  case 2:
    out = 2;
    break;
}
out;
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr></tbody></table>
```

:::



### try/catch block

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out &quot;hello&quot;) (try (throw 1) (catch e (:= out &quot;world&quot;))) out)
```"></span></td><td><span data-qmd="```js
let out = &quot;hello&quot;;
try{
  throw 1;
}
catch(e){
  out = &quot;world&quot;;
}
out;
```"></span></td><td><span data-qmd="```clj
&quot;world&quot;
```"></span></td></tr></tbody></table>
```

:::



# Base Lib


## Base Lib - For 


### for:array

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out := []) (k/for:array [e [1 2 3 4]] (if (&gt; e 3) (break)) (x:arr-push out e)) out)
```"></span></td><td><span data-qmd="```js
let out = [];
for(let e of [1,2,3,4]){
  if(e &gt; 3){
    break;
  }
  out.push(e);
};
out;
```"></span></td><td><span data-qmd="```clj
[1 2 3]
```"></span></td></tr></tbody></table>
```

:::



### for:object

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out := []) (var obj := {:a 1, :b 2}) (k/for:object [[k v] obj] (x:arr-push out [k v])) out)
```"></span></td><td><span data-qmd="```js
let out = [];
let obj = {&quot;a&quot;:1,&quot;b&quot;:2};
for(let [k,v] of Object.entries(obj)){
  out.push([k,v]);
};
out;
```"></span></td><td><span data-qmd="```clj
[[&quot;a&quot; 1] [&quot;b&quot; 2]]
```"></span></td></tr></tbody></table>
```

:::



### for:index

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out := []) (k/for:index [i [0 10 2]] (x:arr-push out i)) out)
```"></span></td><td><span data-qmd="```js
let out = [];
for(let i = 0; i &lt; 10; i = (i + 2)){
  out.push(i);
};
out;
```"></span></td><td><span data-qmd="```clj
[0 2 4 6 8]
```"></span></td></tr></tbody></table>
```

:::



### for:return

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out) (var success (fn [cb] (cb nil &quot;OK&quot;))) (k/for:return [[ret err] (success (x:callback))] {:success (:= out ret), :error (:= out err)}) out)
```"></span></td><td><span data-qmd="```js
let out = null;
let success = function (cb){
  cb(null,&quot;OK&quot;);
};
success(function (err,ret){
  if(err){
    out = err;
  }
  else{
    out = ret;
  }
});
out;
```"></span></td><td><span data-qmd="```clj
&quot;OK&quot;
```"></span></td></tr></tbody></table>
```

:::



### for:try

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out := nil) (k/for:try [[ret err] (do:&gt; (x:err &quot;hello&quot;))] {:success (:= out ret), :error (:= out err)}) out)
```"></span></td><td><span data-qmd="```js
let out = null;
try{
  let ret =   (function (){
      throw &quot;hello&quot;;
    })();
  out = ret;
}
catch(err){
  out = err;
};
out;
```"></span></td><td><span data-qmd="```clj
&quot;hello&quot;
```"></span></td></tr></tbody></table>
```

:::



### for:async

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out := nil) (k/for:async [[ret err] (+ 1 2 3)] {:success (:= out ret), :error (:= out err)}))
```"></span></td><td><span data-qmd="```js
let out = null;
new Promise(function (resolve,reject){
  resolve(1 + 2 + 3);
}).then(function (ret){
  out = ret;
}).catch(function (err){
  out = err;
});
```"></span></td><td><span data-qmd="```clj
&lt;Promise&gt;
[object Promise]
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - Util


### invoke

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/invoke k/add 1 2)
```"></span></td><td><span data-qmd="```js
1 + 2;
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr></tbody></table>
```

:::



### unpack

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/unpack [1 2 3]) (k/unpack [4 5 6])]
```"></span></td><td><span data-qmd="```js
[...[1,2,3],...[4,5,6]];
```"></span></td><td><span data-qmd="```clj
[1 2 3 4 5 6]
```"></span></td></tr></tbody></table>
```

:::



### apply

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/apply (fn:&gt; [a b] (+ a b)) [1 2])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a + b;
}).apply(null,[1,2]);
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr></tbody></table>
```

:::



### eval

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/eval &quot;1+2&quot;)
```"></span></td><td><span data-qmd="```js
eval(&quot;1+2&quot;);
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/eval [&quot;1+2&quot;])
```"></span></td><td><span data-qmd="```js
(function (s){
  return eval(s);
}).apply(null,[&quot;1+2&quot;]);
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr></tbody></table>
```

:::



### len

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/len &quot;1+2&quot;)
```"></span></td><td><span data-qmd="```js
(&quot;1+2&quot;).length;
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/len [&quot;1+2&quot;])
```"></span></td><td><span data-qmd="```js
(function (arr){
  return (arr).length;
}).apply(null,[&quot;1+2&quot;]);
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr></tbody></table>
```

:::



### cat

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/cat &quot;1+2&quot; &quot;+3&quot;)
```"></span></td><td><span data-qmd="```js
&quot;1+2&quot; + &quot;+3&quot;;
```"></span></td><td><span data-qmd="```clj
&quot;1+2+3&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/cat [&quot;1+2&quot; &quot;+3&quot;])
```"></span></td><td><span data-qmd="```js
(function (...args) {return args.join(&apos;&apos;)}).apply(null,[&quot;1+2&quot;,&quot;+3&quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;1+2+3&quot;
```"></span></td></tr></tbody></table>
```

:::



### x:del

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out {:a 1}) (k/x:del (. out [&quot;a&quot;])) out)
```"></span></td><td><span data-qmd="```js
let out = {&quot;a&quot;:1};
delete out[&quot;a&quot;];
out;
```"></span></td><td><span data-qmd="```clj
{}
```"></span></td></tr></tbody></table>
```

:::



### x:shell

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var cb {}) (defn call [] (k/x:shell &quot;ls&quot; cb)) (call))
```"></span></td><td><span data-qmd="```js
let cb = {};
function call(){
  let p = require(&quot;child_process&quot;);
  p.exec(&quot;ls&quot;,function (err,res){
    if(err){
      if(cb[&quot;error&quot;]){
        return cb.error(err);
      }
    }
    else{
      if(cb[&quot;success&quot;]){
        return cb.success(res);
      }
    }
  });
  return [&quot;async&quot;];;
}
call();
```"></span></td><td><span data-qmd="```clj
[&quot;async&quot;]
```"></span></td></tr></tbody></table>
```

:::



### x:offset

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/x:offset)
```"></span></td><td><span data-qmd="```js
0;
```"></span></td><td><span data-qmd="```clj
0
```"></span></td></tr></tbody></table>
```

:::



### x:offset-rev

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/x:offset-rev)
```"></span></td><td><span data-qmd="```js
-1;
```"></span></td><td><span data-qmd="```clj
-1
```"></span></td></tr></tbody></table>
```

:::



### x:offset-len

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/x:offset-len 10)
```"></span></td><td><span data-qmd="```js
9;
```"></span></td><td><span data-qmd="```clj
9
```"></span></td></tr></tbody></table>
```

:::



### x:offset-rlen

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/x:offset-rlen 10)
```"></span></td><td><span data-qmd="```js
10;
```"></span></td><td><span data-qmd="```clj
10
```"></span></td></tr></tbody></table>
```

:::



### nil?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/nil? &quot;hello&quot;)
```"></span></td><td><span data-qmd="```js
null == &quot;hello&quot;;
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/nil? [&quot;hello&quot;])
```"></span></td><td><span data-qmd="```js
(function (x){
  return null == x;
}).apply(null,[&quot;hello&quot;]);
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr></tbody></table>
```

:::



### not-nil?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/not-nil? &quot;hello&quot;)
```"></span></td><td><span data-qmd="```js
null != &quot;hello&quot;;
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/not-nil? [&quot;hello&quot;])
```"></span></td><td><span data-qmd="```js
(function (x){
  return null != x;
}).apply(null,[&quot;hello&quot;]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### to-string

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/to-string 1)
```"></span></td><td><span data-qmd="```js
String(1);
```"></span></td><td><span data-qmd="```clj
&quot;1&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/to-string [1])
```"></span></td><td><span data-qmd="```js
(function (obj){
  return String(obj);
}).apply(null,[1]);
```"></span></td><td><span data-qmd="```clj
&quot;1&quot;
```"></span></td></tr></tbody></table>
```

:::



### to-number

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/to-number &quot;1.1&quot;)
```"></span></td><td><span data-qmd="```js
Number(&quot;1.1&quot;);
```"></span></td><td><span data-qmd="```clj
1.1
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/to-number [&quot;1.1&quot;])
```"></span></td><td><span data-qmd="```js
(function (obj){
  return Number(obj);
}).apply(null,[&quot;1.1&quot;]);
```"></span></td><td><span data-qmd="```clj
1.1
```"></span></td></tr></tbody></table>
```

:::



### is-string?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/is-string? &quot;1.1&quot;)
```"></span></td><td><span data-qmd="```js
&quot;string&quot; == (typeof &quot;1.1&quot;);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/is-string? [&quot;1.1&quot;])
```"></span></td><td><span data-qmd="```js
(function (obj){
  return &quot;string&quot; == (typeof obj);
}).apply(null,[&quot;1.1&quot;]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### is-number?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/is-number? 1.1)
```"></span></td><td><span data-qmd="```js
&quot;number&quot; == (typeof 1.1);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/is-number? [1.1])
```"></span></td><td><span data-qmd="```js
(function (obj){
  return &quot;number&quot; == (typeof obj);
}).apply(null,[1.1]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### is-integer?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/is-integer? 1000)
```"></span></td><td><span data-qmd="```js
Number.isInteger(1000);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/is-integer? [1000])
```"></span></td><td><span data-qmd="```js
(function (obj){
  return Number.isInteger(obj);
}).apply(null,[1000]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### is-boolean?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/is-boolean? false)
```"></span></td><td><span data-qmd="```js
&quot;boolean&quot; == (typeof false);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/is-boolean? [false])
```"></span></td><td><span data-qmd="```js
(function (obj){
  return &quot;boolean&quot; == (typeof obj);
}).apply(null,[false]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### is-function?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/is-function? (fn [] (return 1)))
```"></span></td><td><span data-qmd="```js
&quot;function&quot; == (typeof (function (){
  return 1;
}));
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/is-function? [(fn [] (return 1))])
```"></span></td><td><span data-qmd="```js
(function (x){
  return &quot;function&quot; == (typeof x);
}).apply(null,[
  function (){
  return 1;
}
]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### is-array?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/is-array? [1 2 3 4 5])
```"></span></td><td><span data-qmd="```js
Array.isArray([1,2,3,4,5]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/is-array? [[1 2 3 4 5]])
```"></span></td><td><span data-qmd="```js
(function (x){
  return Array.isArray(x);
}).apply(null,[[1,2,3,4,5]]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### is-object?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/is-object? {:a 1, :b 2})
```"></span></td><td><span data-qmd="```js
(null != {&quot;a&quot;:1,&quot;b&quot;:2}) &amp;&amp; (&quot;object&quot; == (typeof {&quot;a&quot;:1,&quot;b&quot;:2})) &amp;&amp; !Array.isArray({&quot;a&quot;:1,&quot;b&quot;:2});
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/is-object? [{:a 1, :b 2}])
```"></span></td><td><span data-qmd="```js
(function (x){
  return (null != x) &amp;&amp; (&quot;object&quot; == (typeof x)) &amp;&amp; !Array.isArray(x);
}).apply(null,[{&quot;a&quot;:1,&quot;b&quot;:2}]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### type-native

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do [(k/type-native {}) (k/type-native [1]) (k/type-native (fn [])) (k/type-native 1) (k/type-native &quot;&quot;) (k/type-native true)])
```"></span></td><td><span data-qmd="```js
[
  k.type_native({}),
  k.type_native([1]),
  k.type_native(function (){
  
}),
  k.type_native(1),
  k.type_native(&quot;&quot;),
  k.type_native(true)
];
```"></span></td><td><span data-qmd="```clj
[&quot;object&quot; &quot;array&quot; &quot;function&quot; &quot;number&quot; &quot;string&quot; &quot;boolean&quot;]
```"></span></td></tr></tbody></table>
```

:::



### type-class

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do [(k/type-class {}) (k/type-class [1]) (k/type-class (fn [])) (k/type-class 1) (k/type-class &quot;&quot;) (k/type-class true)])
```"></span></td><td><span data-qmd="```js
[
  k.type_class({}),
  k.type_class([1]),
  k.type_class(function (){
  
}),
  k.type_class(1),
  k.type_class(&quot;&quot;),
  k.type_class(true)
];
```"></span></td><td><span data-qmd="```clj
[&quot;object&quot; &quot;array&quot; &quot;function&quot; &quot;number&quot; &quot;string&quot; &quot;boolean&quot;]
```"></span></td></tr></tbody></table>
```

:::



### print

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/print &quot;hello&quot;)
```"></span></td><td><span data-qmd="```js
console.log(&quot;hello&quot;);
```"></span></td><td><span data-qmd="```clj
nil
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/print [&quot;hello&quot;])
```"></span></td><td><span data-qmd="```js
console.log.apply(null,[&quot;hello&quot;]);
```"></span></td><td><span data-qmd="```clj
nil
```"></span></td></tr></tbody></table>
```

:::



### random

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/random)
```"></span></td><td><span data-qmd="```js
Math.random();
```"></span></td><td><span data-qmd="```clj
0.7656764579819733
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/random [])
```"></span></td><td><span data-qmd="```js
(function (){
  return Math.random();
}).apply(null,[]);
```"></span></td><td><span data-qmd="```clj
0.38615254246196806
```"></span></td></tr></tbody></table>
```

:::



### now-ms

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/now-ms)
```"></span></td><td><span data-qmd="```js
Date.now();
```"></span></td><td><span data-qmd="```clj
1745738935141
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/now-ms [])
```"></span></td><td><span data-qmd="```js
(function (){
  return Date.now();
}).apply(null,[]);
```"></span></td><td><span data-qmd="```clj
1745738935159
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - Global


### !:G

Accesses the global object

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
!:G
```"></span></td><td><span data-qmd="```js
globalThis;
```"></span></td><td><span data-qmd="```clj
&lt;Object&gt;
[object global]
```"></span></td></tr><tr><td><span data-qmd="```clj
(!:G CUSTOM)
```"></span></td><td><span data-qmd="```js
globalThis[&quot;CUSTOM&quot;];
```"></span></td><td><span data-qmd="```clj
nil
```"></span></td></tr></tbody></table>
```

:::



### global-set

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (k/global-set &quot;HELLO&quot; 1) (. !:G [&quot;HELLO&quot;]))
```"></span></td><td><span data-qmd="```js
globalThis[&quot;HELLO&quot;] = 1;
globalThis[&quot;HELLO&quot;];
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr></tbody></table>
```

:::



### global-has?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (k/global-set &quot;HELLO&quot; 1) (k/global-has? &quot;HELLO&quot;))
```"></span></td><td><span data-qmd="```js
globalThis[&quot;HELLO&quot;] = 1;
!(null == globalThis[&quot;HELLO&quot;]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### global-del

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (k/global-del &quot;HELLO&quot;) (k/global-has? &quot;HELLO&quot;))
```"></span></td><td><span data-qmd="```js
globalThis[&quot;HELLO&quot;] = null;
!(null == globalThis[&quot;HELLO&quot;]);
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - String


### get-char

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/get-char &quot;abc&quot; 0)
```"></span></td><td><span data-qmd="```js
&quot;abc&quot;.charCodeAt(0);
```"></span></td><td><span data-qmd="```clj
97
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/get-char [&quot;abc&quot; 0])
```"></span></td><td><span data-qmd="```js
(function (s,i){
  return s.charCodeAt(i);
}).apply(null,[&quot;abc&quot;,0]);
```"></span></td><td><span data-qmd="```clj
97
```"></span></td></tr></tbody></table>
```

:::



### gt-string

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/gt-string &quot;a&quot; &quot;b&quot;) (k/gt-string &quot;A&quot; &quot;a&quot;)]
```"></span></td><td><span data-qmd="```js
[0 &gt; &quot;b&quot;.localeCompare(&quot;a&quot;),0 &gt; &quot;a&quot;.localeCompare(&quot;A&quot;)];
```"></span></td><td><span data-qmd="```clj
[false true]
```"></span></td></tr></tbody></table>
```

:::



### lt-string

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/lt-string &quot;a&quot; &quot;b&quot;) (k/lt-string &quot;A&quot; &quot;a&quot;)]
```"></span></td><td><span data-qmd="```js
[0 &gt; &quot;a&quot;.localeCompare(&quot;b&quot;),0 &gt; &quot;A&quot;.localeCompare(&quot;a&quot;)];
```"></span></td><td><span data-qmd="```clj
[true false]
```"></span></td></tr></tbody></table>
```

:::



### split

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/split &quot;hello/world&quot; &quot;/&quot;)
```"></span></td><td><span data-qmd="```js
&quot;hello/world&quot;.split(&quot;/&quot;);
```"></span></td><td><span data-qmd="```clj
[&quot;hello&quot; &quot;world&quot;]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/split [&quot;hello/world&quot; &quot;/&quot;])
```"></span></td><td><span data-qmd="```js
(function (s,tok){
  return s.split(tok);
}).apply(null,[&quot;hello/world&quot;,&quot;/&quot;]);
```"></span></td><td><span data-qmd="```clj
[&quot;hello&quot; &quot;world&quot;]
```"></span></td></tr></tbody></table>
```

:::



### join

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/join &quot;/&quot; [&quot;hello&quot; &quot;world&quot;])
```"></span></td><td><span data-qmd="```js
[&quot;hello&quot;,&quot;world&quot;].join(&quot;/&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;hello/world&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/join [&quot;/&quot; [&quot;hello&quot; &quot;world&quot;]])
```"></span></td><td><span data-qmd="```js
(function (s,arr){
  return arr.join(s);
}).apply(null,[&quot;/&quot;,[&quot;hello&quot;,&quot;world&quot;]]);
```"></span></td><td><span data-qmd="```clj
&quot;hello/world&quot;
```"></span></td></tr></tbody></table>
```

:::



### replace

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/replace &quot;hello/world&quot; &quot;/&quot; &quot;_&quot;)
```"></span></td><td><span data-qmd="```js
&quot;hello/world&quot;.replace(new RegExp(&quot;/&quot;,&quot;g&quot;),&quot;_&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;hello_world&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/replace [&quot;hello/world&quot; &quot;/&quot; &quot;_&quot;])
```"></span></td><td><span data-qmd="```js
(function (s,tok,replacement){
  return s.replace(new RegExp(tok,&quot;g&quot;),replacement);
}).apply(null,[&quot;hello/world&quot;,&quot;/&quot;,&quot;_&quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;hello_world&quot;
```"></span></td></tr></tbody></table>
```

:::



### index-of

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/index-of &quot;hello/world&quot; &quot;/&quot;)
```"></span></td><td><span data-qmd="```js
&quot;hello/world&quot;.indexOf(&quot;/&quot;) - 0;
```"></span></td><td><span data-qmd="```clj
5
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/index-of [&quot;hello/world&quot; &quot;/&quot;])
```"></span></td><td><span data-qmd="```js
(function (s,tok){
  return s.indexOf(tok) - 0;
}).apply(null,[&quot;hello/world&quot;,&quot;/&quot;]);
```"></span></td><td><span data-qmd="```clj
5
```"></span></td></tr></tbody></table>
```

:::



### substring

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/substring &quot;hello/world&quot; 3) (k/substring &quot;hello/world&quot; 3 8)]
```"></span></td><td><span data-qmd="```js
[&quot;hello/world&quot;.substring(3),&quot;hello/world&quot;.substring(3,8)];
```"></span></td><td><span data-qmd="```clj
[&quot;lo/world&quot; &quot;lo/wo&quot;]
```"></span></td></tr></tbody></table>
```

:::



### to-uppercase

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/to-uppercase &quot;hello&quot;)
```"></span></td><td><span data-qmd="```js
&quot;hello&quot;.toUpperCase();
```"></span></td><td><span data-qmd="```clj
&quot;HELLO&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/to-uppercase [&quot;hello&quot;])
```"></span></td><td><span data-qmd="```js
(function (s){
  return s.toUpperCase();
}).apply(null,[&quot;hello&quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;HELLO&quot;
```"></span></td></tr></tbody></table>
```

:::



### to-lowercase

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/to-lowercase &quot;hello&quot;)
```"></span></td><td><span data-qmd="```js
&quot;hello&quot;.toLowerCase();
```"></span></td><td><span data-qmd="```clj
&quot;hello&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/to-lowercase [&quot;hello&quot;])
```"></span></td><td><span data-qmd="```js
(function (s){
  return s.toLowerCase();
}).apply(null,[&quot;hello&quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;hello&quot;
```"></span></td></tr></tbody></table>
```

:::



### to-fixed

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/to-fixed 1.2 3)
```"></span></td><td><span data-qmd="```js
1.2.toFixed(3);
```"></span></td><td><span data-qmd="```clj
&quot;1.200&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/to-fixed [1.2 3])
```"></span></td><td><span data-qmd="```js
(function (n,digits){
  return n.toFixed(digits);
}).apply(null,[1.2,3]);
```"></span></td><td><span data-qmd="```clj
&quot;1.200&quot;
```"></span></td></tr></tbody></table>
```

:::



### trim

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/trim &quot; \n  hello \n  &quot;)
```"></span></td><td><span data-qmd="```js
&quot; \n  hello \n  &quot;.trim();
```"></span></td><td><span data-qmd="```clj
&quot;hello&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/trim [&quot; \n  hello \n  &quot;])
```"></span></td><td><span data-qmd="```js
(function (s){
  return s.trim();
}).apply(null,[&quot; \n  hello \n  &quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;hello&quot;
```"></span></td></tr></tbody></table>
```

:::



### trim-left

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/trim-left &quot; \n  hello \n  &quot;)
```"></span></td><td><span data-qmd="```js
&quot; \n  hello \n  &quot;.trimLeft();
```"></span></td><td><span data-qmd="```clj
&quot;hello \n  &quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/trim-left [&quot; \n  hello \n  &quot;])
```"></span></td><td><span data-qmd="```js
(function (s){
  return s.trimLeft();
}).apply(null,[&quot; \n  hello \n  &quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;hello \n  &quot;
```"></span></td></tr></tbody></table>
```

:::



### trim-right

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/trim-right &quot; \n  hello \n  &quot;)
```"></span></td><td><span data-qmd="```js
&quot; \n  hello \n  &quot;.trimRight();
```"></span></td><td><span data-qmd="```clj
&quot; \n  hello&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/trim-right [&quot; \n  hello \n  &quot;])
```"></span></td><td><span data-qmd="```js
(function (s){
  return s.trimRight();
}).apply(null,[&quot; \n  hello \n  &quot;]);
```"></span></td><td><span data-qmd="```clj
&quot; \n  hello&quot;
```"></span></td></tr></tbody></table>
```

:::



### starts-with?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/starts-with? &quot;Foo Bar&quot; &quot;Foo&quot;)
```"></span></td><td><span data-qmd="```js
k.starts_withp(&quot;Foo Bar&quot;,&quot;Foo&quot;);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### ends-with?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/ends-with? &quot;Foo Bar&quot; &quot;Bar&quot;)
```"></span></td><td><span data-qmd="```js
k.ends_withp(&quot;Foo Bar&quot;,&quot;Bar&quot;);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### capitalize

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/capitalize &quot;hello&quot;)
```"></span></td><td><span data-qmd="```js
k.capitalize(&quot;hello&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;Hello&quot;
```"></span></td></tr></tbody></table>
```

:::



### decapitalize

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/decapitalize &quot;HELLO&quot;)
```"></span></td><td><span data-qmd="```js
k.decapitalize(&quot;HELLO&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;hELLO&quot;
```"></span></td></tr></tbody></table>
```

:::



### pad-left

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/pad-left &quot;000&quot; 5 &quot;-&quot;)
```"></span></td><td><span data-qmd="```js
k.pad_left(&quot;000&quot;,5,&quot;-&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;--000&quot;
```"></span></td></tr></tbody></table>
```

:::



### pad-right

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/pad-right &quot;000&quot; 5 &quot;-&quot;)
```"></span></td><td><span data-qmd="```js
k.pad_right(&quot;000&quot;,5,&quot;-&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;000--&quot;
```"></span></td></tr></tbody></table>
```

:::



### pad-lines

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/pad-lines (k/join &quot;\n&quot; [&quot;hello&quot; &quot;world&quot;]) 2 &quot; &quot;)
```"></span></td><td><span data-qmd="```js
k.pad_lines([&quot;hello&quot;,&quot;world&quot;].join(&quot;\n&quot;),2,&quot; &quot;);
```"></span></td><td><span data-qmd="```clj
&quot;  hello\n  world&quot;
```"></span></td></tr></tbody></table>
```

:::



### split-long

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/split-long &quot;1234567890123456789012345678901234567890123456789012345678901234567890&quot; 4)
```"></span></td><td><span data-qmd="```js
k.split_long(
  &quot;1234567890123456789012345678901234567890123456789012345678901234567890&quot;,
  4
);
```"></span></td><td><span data-qmd="```clj
[&quot;1234&quot; &quot;5678&quot; &quot;9012&quot; &quot;3456&quot; &quot;7890&quot; &quot;1234&quot; &quot;5678&quot; &quot;9012&quot; &quot;3456&quot; &quot;7890&quot; &quot;1234&quot; &quot;5678&quot; &quot;9012&quot; &quot;3456&quot; &quot;7890&quot; &quot;1234&quot; &quot;5678&quot; &quot;90&quot;]
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - Encode


### b64-encode

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/b64-encode &quot;hello&quot;)
```"></span></td><td><span data-qmd="```js
btoa(&quot;hello&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;aGVsbG8=&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/b64-encode [&quot;hello&quot;])
```"></span></td><td><span data-qmd="```js
(function (s){
  return btoa(s);
}).apply(null,[&quot;hello&quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;aGVsbG8=&quot;
```"></span></td></tr></tbody></table>
```

:::



### b64-decode

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/b64-decode &quot;aGVsbG8=&quot;)
```"></span></td><td><span data-qmd="```js
atob(&quot;aGVsbG8=&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;hello&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/b64-decode [&quot;aGVsbG8=&quot;])
```"></span></td><td><span data-qmd="```js
(function (s){
  return atob(s);
}).apply(null,[&quot;aGVsbG8=&quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;hello&quot;
```"></span></td></tr></tbody></table>
```

:::



### uri-encode

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/uri-encode &quot;+.\n &quot;)
```"></span></td><td><span data-qmd="```js
encodeURIComponent(&quot;+.\n &quot;);
```"></span></td><td><span data-qmd="```clj
&quot;%2B.%0A%20&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/uri-encode [&quot;+.\n &quot;])
```"></span></td><td><span data-qmd="```js
(function (s){
  return encodeURIComponent(s);
}).apply(null,[&quot;+.\n &quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;%2B.%0A%20&quot;
```"></span></td></tr></tbody></table>
```

:::



### uri-decode

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/uri-decode &quot;%2B.%0A%20&quot;)
```"></span></td><td><span data-qmd="```js
decodeURIComponent(&quot;%2B.%0A%20&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;+.\n &quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/uri-decode [&quot;%2B.%0A%20&quot;])
```"></span></td><td><span data-qmd="```js
(function (s){
  return decodeURIComponent(s);
}).apply(null,[&quot;%2B.%0A%20&quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;+.\n &quot;
```"></span></td></tr></tbody></table>
```

:::



### js-encode

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/js-encode [1 2 {:a [{:b 3}]}])
```"></span></td><td><span data-qmd="```js
JSON.stringify([1,2,{&quot;a&quot;:[{&quot;b&quot;:3}]}]);
```"></span></td><td><span data-qmd="```clj
&quot;[1,2,{\&quot;a\&quot;:[{\&quot;b\&quot;:3}]}]&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/js-encode [[1 2 {:a [{:b 3}]}]])
```"></span></td><td><span data-qmd="```js
(function (obj){
  return JSON.stringify(obj);
}).apply(null,[[1,2,{&quot;a&quot;:[{&quot;b&quot;:3}]}]]);
```"></span></td><td><span data-qmd="```clj
&quot;[1,2,{\&quot;a\&quot;:[{\&quot;b\&quot;:3}]}]&quot;
```"></span></td></tr></tbody></table>
```

:::



### js-decode

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/js-decode &quot;[1,2,{\&quot;a\&quot;:[{\&quot;b\&quot;:3}]}]&quot;)
```"></span></td><td><span data-qmd="```js
JSON.parse(&quot;[1,2,{\&quot;a\&quot;:[{\&quot;b\&quot;:3}]}]&quot;);
```"></span></td><td><span data-qmd="```clj
[1 2 {&quot;a&quot; [{&quot;b&quot; 3}]}]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/js-decode [&quot;[1,2,{\&quot;a\&quot;:[{\&quot;b\&quot;:3}]}]&quot;])
```"></span></td><td><span data-qmd="```js
(function (s){
  return JSON.parse(s);
}).apply(null,[&quot;[1,2,{\&quot;a\&quot;:[{\&quot;b\&quot;:3}]}]&quot;]);
```"></span></td><td><span data-qmd="```clj
[1 2 {&quot;a&quot; [{&quot;b&quot; 3}]}]
```"></span></td></tr></tbody></table>
```

:::



### json-push

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/json-push &quot;[1,2,3]&quot; &quot;4&quot;)
```"></span></td><td><span data-qmd="```js
&quot;[1,2,3]&quot;.substring(0,&quot;[1,2,3]&quot;.length - 1) + &quot;,&quot; + &quot;4&quot; + &quot;]&quot;;
```"></span></td><td><span data-qmd="```clj
&quot;[1,2,3,4]&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/json-push [&quot;[1,2,3]&quot; &quot;4&quot;])
```"></span></td><td><span data-qmd="```js
(function (json,e){
  return json.substring(0,json.length - 1) + &quot;,&quot; + e + &quot;]&quot;;
}).apply(null,[&quot;[1,2,3]&quot;,&quot;4&quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;[1,2,3,4]&quot;
```"></span></td></tr></tbody></table>
```

:::



### json-push-first

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/json-push-first &quot;[1,2,3]&quot; &quot;0&quot;)
```"></span></td><td><span data-qmd="```js
&quot;[&quot; + &quot;0&quot; + &quot;,&quot; + &quot;[1,2,3]&quot;.substring(1);
```"></span></td><td><span data-qmd="```clj
&quot;[0,1,2,3]&quot;
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/json-push-first [&quot;[1,2,3]&quot; &quot;0&quot;])
```"></span></td><td><span data-qmd="```js
(function (json,e){
  return &quot;[&quot; + e + &quot;,&quot; + json.substring(1);
}).apply(null,[&quot;[1,2,3]&quot;,&quot;0&quot;]);
```"></span></td><td><span data-qmd="```clj
&quot;[0,1,2,3]&quot;
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - Symbol


### sym-full

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/sym-full &quot;hello&quot; &quot;world&quot;)
```"></span></td><td><span data-qmd="```js
k.sym_full(&quot;hello&quot;,&quot;world&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;hello/world&quot;
```"></span></td></tr></tbody></table>
```

:::



### sym-name

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/sym-name &quot;hello/world&quot;)
```"></span></td><td><span data-qmd="```js
k.sym_name(&quot;hello/world&quot;);
```"></span></td><td><span data-qmd="```clj
&quot;world&quot;
```"></span></td></tr></tbody></table>
```

:::



### sym-ns

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/sym-ns &quot;hello/world&quot;) (k/sym-ns &quot;hello&quot;)]
```"></span></td><td><span data-qmd="```js
k.sym_ns(&quot;hello/world&quot;),k.sym_ns(&quot;hello&quot;);
```"></span></td><td><span data-qmd="```clj
nil
```"></span></td></tr></tbody></table>
```

:::



### sym-pair

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/sym-pair &quot;hello/world&quot;)
```"></span></td><td><span data-qmd="```js
k.sym_pair(&quot;hello/world&quot;);
```"></span></td><td><span data-qmd="```clj
[&quot;hello&quot; &quot;world&quot;]
```"></span></td></tr></tbody></table>
```

:::



# Base Lib - Math


## Base Lib - Math Basic


### eq

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/eq 2 2) (k/eq 2 1)]
```"></span></td><td><span data-qmd="```js
[2 == 2,2 == 1];
```"></span></td><td><span data-qmd="```clj
[true false]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/eq [1 1])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a == b;
}).apply(null,[1,1]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### neq

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/neq 2 2) (k/neq 2 1)]
```"></span></td><td><span data-qmd="```js
[2 != 2,2 != 1];
```"></span></td><td><span data-qmd="```clj
[false true]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/neq [1 1])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a != b;
}).apply(null,[1,1]);
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr></tbody></table>
```

:::



### add

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/add 1 2)
```"></span></td><td><span data-qmd="```js
1 + 2;
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/add [1 2])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a + b;
}).apply(null,[1,2]);
```"></span></td><td><span data-qmd="```clj
4
```"></span></td></tr></tbody></table>
```

:::



### sub 

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/sub 1 2)
```"></span></td><td><span data-qmd="```js
1 - 2;
```"></span></td><td><span data-qmd="```clj
-1
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/sub [1 2])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a - b;
}).apply(null,[1,2]);
```"></span></td><td><span data-qmd="```clj
-1
```"></span></td></tr></tbody></table>
```

:::



### mul

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/mul 10 10)
```"></span></td><td><span data-qmd="```js
10 * 10;
```"></span></td><td><span data-qmd="```clj
100
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/mul [1 2])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a * b;
}).apply(null,[1,2]);
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr></tbody></table>
```

:::



### div

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/div 10 2)
```"></span></td><td><span data-qmd="```js
10 / 2;
```"></span></td><td><span data-qmd="```clj
5
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/div [1 2])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a / b;
}).apply(null,[1,2]);
```"></span></td><td><span data-qmd="```clj
0.5
```"></span></td></tr></tbody></table>
```

:::



### gt

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/gt 2 2) (k/gt 2 1)]
```"></span></td><td><span data-qmd="```js
[2 &gt; 2,2 &gt; 1];
```"></span></td><td><span data-qmd="```clj
[false true]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/gt [1 2])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a &gt; b;
}).apply(null,[1,2]);
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr></tbody></table>
```

:::



### lt

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/lt 2 2) (k/lt 1 2)]
```"></span></td><td><span data-qmd="```js
[2 &lt; 2,1 &lt; 2];
```"></span></td><td><span data-qmd="```clj
[false true]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/lt [1 2])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a &lt; b;
}).apply(null,[1,2]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### gte

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/gte 2 2) (k/gte 2 1)]
```"></span></td><td><span data-qmd="```js
[2 &gt;= 2,2 &gt;= 1];
```"></span></td><td><span data-qmd="```clj
[true true]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/gte [1 2])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a &gt;= b;
}).apply(null,[1,2]);
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr></tbody></table>
```

:::



### lte

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/lte 2 2) (k/lte 1 2)]
```"></span></td><td><span data-qmd="```js
[2 &lt;= 2,1 &lt;= 2];
```"></span></td><td><span data-qmd="```clj
[true true]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/lte [1 2])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a &lt;= b;
}).apply(null,[1,2]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### neg

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/neg 1) (k/neg 0) (k/neg -1)]
```"></span></td><td><span data-qmd="```js
[-(1),-(0),-(-1)];
```"></span></td><td><span data-qmd="```clj
[-1 0 1]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/neg [1])
```"></span></td><td><span data-qmd="```js
(function (x){
  return -(x);
}).apply(null,[1]);
```"></span></td><td><span data-qmd="```clj
-1
```"></span></td></tr></tbody></table>
```

:::



### inc

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/inc 1)
```"></span></td><td><span data-qmd="```js
1 + 1;
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/inc [1])
```"></span></td><td><span data-qmd="```js
(function (x){
  return x + 1;
}).apply(null,[1]);
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr></tbody></table>
```

:::



### dec

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/dec 1)
```"></span></td><td><span data-qmd="```js
1 - 1;
```"></span></td><td><span data-qmd="```clj
0
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/dec [1])
```"></span></td><td><span data-qmd="```js
(function (x){
  return x - 1;
}).apply(null,[1]);
```"></span></td><td><span data-qmd="```clj
0
```"></span></td></tr></tbody></table>
```

:::



### pow

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/pow 2 3)
```"></span></td><td><span data-qmd="```js
Math.pow(2,3);
```"></span></td><td><span data-qmd="```clj
8
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/pow [5 6])
```"></span></td><td><span data-qmd="```js
(function (base,n){
  return Math.pow(base,n);
}).apply(null,[5,6]);
```"></span></td><td><span data-qmd="```clj
15625
```"></span></td></tr></tbody></table>
```

:::



### quot

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/quot 20 3)
```"></span></td><td><span data-qmd="```js
Math.floor(20 / 3);
```"></span></td><td><span data-qmd="```clj
6
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/quot [50 6])
```"></span></td><td><span data-qmd="```js
(function (base,n){
  return Math.floor(base / n);
}).apply(null,[50,6]);
```"></span></td><td><span data-qmd="```clj
8
```"></span></td></tr></tbody></table>
```

:::



### sqrt

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/sqrt -1) (k/sqrt 1)]
```"></span></td><td><span data-qmd="```js
[Math.sqrt(-1),Math.sqrt(1)];
```"></span></td><td><span data-qmd="```clj
[nil 1]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/sqrt [16])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.sqrt(num);
}).apply(null,[16]);
```"></span></td><td><span data-qmd="```clj
4
```"></span></td></tr></tbody></table>
```

:::



### exp

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/exp 3)
```"></span></td><td><span data-qmd="```js
Math.exp(3);
```"></span></td><td><span data-qmd="```clj
20.085536923187668
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/exp [6])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.exp(num);
}).apply(null,[6]);
```"></span></td><td><span data-qmd="```clj
403.4287934927351
```"></span></td></tr></tbody></table>
```

:::



### loge

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/loge 3)
```"></span></td><td><span data-qmd="```js
Math.log(3);
```"></span></td><td><span data-qmd="```clj
1.0986122886681096
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/loge [6])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.log(num);
}).apply(null,[6]);
```"></span></td><td><span data-qmd="```clj
1.791759469228055
```"></span></td></tr></tbody></table>
```

:::



### log10

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/log10 3)
```"></span></td><td><span data-qmd="```js
Math.log10(3);
```"></span></td><td><span data-qmd="```clj
0.47712125471966244
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/log10 [6])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.log10(num);
}).apply(null,[6]);
```"></span></td><td><span data-qmd="```clj
0.7781512503836436
```"></span></td></tr></tbody></table>
```

:::



### mod

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/mod 20 3)
```"></span></td><td><span data-qmd="```js
20 % 3;
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/mod [50 6])
```"></span></td><td><span data-qmd="```js
(function (num,denom){
  return num % denom;
}).apply(null,[50,6]);
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr></tbody></table>
```

:::



### mod-pos

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(mod -11 10) (k/mod-pos -11 10)]
```"></span></td><td><span data-qmd="```js
[-11 % 10,k.mod_pos(-11,10)];
```"></span></td><td><span data-qmd="```clj
[-1 9]
```"></span></td></tr></tbody></table>
```

:::



### mod-offset

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/mod-offset 20 280 360) (k/mod-offset 280 20 360) (k/mod-offset 280 -80 360) (k/mod-offset 20 -60 360) (k/mod-offset 60 30 360)]
```"></span></td><td><span data-qmd="```js
[
  k.mod_offset(20,280,360),
  k.mod_offset(280,20,360),
  k.mod_offset(280,-80,360),
  k.mod_offset(20,-60,360),
  k.mod_offset(60,30,360)
];
```"></span></td><td><span data-qmd="```clj
[-100 100 0 -80 -30]
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - Math Checks


### zero?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/zero? 1) (k/zero? 0)]
```"></span></td><td><span data-qmd="```js
[1 == 0,0 == 0];
```"></span></td><td><span data-qmd="```clj
[false true]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/zero? [1])
```"></span></td><td><span data-qmd="```js
(function (x){
  return x == 0;
}).apply(null,[1]);
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr></tbody></table>
```

:::



### pos?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/pos? 1) (k/pos? 0)]
```"></span></td><td><span data-qmd="```js
[1 &gt; 0,0 &gt; 0];
```"></span></td><td><span data-qmd="```clj
[true false]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/pos? [-1])
```"></span></td><td><span data-qmd="```js
(function (x){
  return x &gt; 0;
}).apply(null,[-1]);
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr></tbody></table>
```

:::



### neg?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/neg? -1) (k/neg? 0)]
```"></span></td><td><span data-qmd="```js
[-1 &lt; 0,0 &lt; 0];
```"></span></td><td><span data-qmd="```clj
[true false]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/neg? [-1])
```"></span></td><td><span data-qmd="```js
(function (x){
  return x &lt; 0;
}).apply(null,[-1]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### even?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/even? 2) (k/even? 1)]
```"></span></td><td><span data-qmd="```js
[0 == (2 % 2),0 == (1 % 2)];
```"></span></td><td><span data-qmd="```clj
[true false]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/even? [-1])
```"></span></td><td><span data-qmd="```js
(function (x){
  return 0 == (x % 2);
}).apply(null,[-1]);
```"></span></td><td><span data-qmd="```clj
false
```"></span></td></tr></tbody></table>
```

:::



### odd?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/odd? 2) (k/odd? 1)]
```"></span></td><td><span data-qmd="```js
[!(0 == (2 % 2)),!(0 == (1 % 2))];
```"></span></td><td><span data-qmd="```clj
[false true]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/odd? [-1])
```"></span></td><td><span data-qmd="```js
(function (x){
  return !(0 == (x % 2));
}).apply(null,[-1]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - Math Util


### abs

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/abs -1) (k/abs 1)]
```"></span></td><td><span data-qmd="```js
[Math.abs(-1),Math.abs(1)];
```"></span></td><td><span data-qmd="```clj
[1 1]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/abs [-1])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.abs(num);
}).apply(null,[-1]);
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr></tbody></table>
```

:::



### max

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/max 1 2 3 2)
```"></span></td><td><span data-qmd="```js
Math.max(1,2,3,2);
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/max [1 2 3 2])
```"></span></td><td><span data-qmd="```js
Math.max.apply(null,[1,2,3,2]);
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr></tbody></table>
```

:::



### min

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/min 1 2 3 2)
```"></span></td><td><span data-qmd="```js
Math.min(1,2,3,2);
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/min [1 2 3 2])
```"></span></td><td><span data-qmd="```js
Math.max.apply(null,[1,2,3,2]);
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr></tbody></table>
```

:::



### ceil

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/ceil -1.1) (k/ceil 1.1)]
```"></span></td><td><span data-qmd="```js
[Math.ceil(-1.1),Math.ceil(1.1)];
```"></span></td><td><span data-qmd="```clj
[-1 2]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/ceil [-1.1])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.ceil(num);
}).apply(null,[-1.1]);
```"></span></td><td><span data-qmd="```clj
-1
```"></span></td></tr></tbody></table>
```

:::



### floor

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/floor -1.1) (k/floor 1.1)]
```"></span></td><td><span data-qmd="```js
[Math.floor(-1.1),Math.floor(1.1)];
```"></span></td><td><span data-qmd="```clj
[-2 1]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/floor [-1.1])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.floor(num);
}).apply(null,[-1.1]);
```"></span></td><td><span data-qmd="```clj
-2
```"></span></td></tr></tbody></table>
```

:::



### gcd

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/gcd 10 6)
```"></span></td><td><span data-qmd="```js
k.gcd(10,6);
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr></tbody></table>
```

:::



### lcm

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/lcm 10 6)
```"></span></td><td><span data-qmd="```js
k.lcm(10,6);
```"></span></td><td><span data-qmd="```clj
30
```"></span></td></tr></tbody></table>
```

:::



### mix

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/mix 100 20 0.1)
```"></span></td><td><span data-qmd="```js
k.mix(100,20,0.1);
```"></span></td><td><span data-qmd="```clj
92
```"></span></td></tr></tbody></table>
```

:::



### sign

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/sign -10) (k/sign 10)]
```"></span></td><td><span data-qmd="```js
[k.sign(-10),k.sign(10)];
```"></span></td><td><span data-qmd="```clj
[-1 1]
```"></span></td></tr></tbody></table>
```

:::



### round

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/round 0.9) (k/round 1.1) (k/round 1.49) (k/round 1.51)]
```"></span></td><td><span data-qmd="```js
[k.round(0.9),k.round(1.1),k.round(1.49),k.round(1.51)];
```"></span></td><td><span data-qmd="```clj
[1 1 1 2]
```"></span></td></tr></tbody></table>
```

:::



### clamp

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/clamp 0 5 6) (k/clamp 0 5 -1) (k/clamp 0 5 4)]
```"></span></td><td><span data-qmd="```js
[k.clamp(0,5,6),k.clamp(0,5,-1),k.clamp(0,5,4)];
```"></span></td><td><span data-qmd="```clj
[5 0 4]
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - Math Bitwise



### bit-and

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/bit-and 7 4)
```"></span></td><td><span data-qmd="```js
7 &amp; 4;
```"></span></td><td><span data-qmd="```clj
4
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/bit-and [7 4])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a &amp; b;
}).apply(null,[7,4]);
```"></span></td><td><span data-qmd="```clj
4
```"></span></td></tr></tbody></table>
```

:::



### bit-or

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/bit-or 3 4)
```"></span></td><td><span data-qmd="```js
3 | 4;
```"></span></td><td><span data-qmd="```clj
7
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/bit-or [3 4])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a | b;
}).apply(null,[3,4]);
```"></span></td><td><span data-qmd="```clj
7
```"></span></td></tr></tbody></table>
```

:::



### bit-xor

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/bit-xor 3 5)
```"></span></td><td><span data-qmd="```js
3 ^ 5;
```"></span></td><td><span data-qmd="```clj
6
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/bit-xor [3 5])
```"></span></td><td><span data-qmd="```js
(function (a,b){
  return a ^ b;
}).apply(null,[3,5]);
```"></span></td><td><span data-qmd="```clj
6
```"></span></td></tr></tbody></table>
```

:::



### bit-lshift

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/bit-lshift 7 1)
```"></span></td><td><span data-qmd="```js
7 &lt;&lt; 1;
```"></span></td><td><span data-qmd="```clj
14
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/bit-lshift [7 1])
```"></span></td><td><span data-qmd="```js
(function (x,n){
  return x &lt;&lt; n;
}).apply(null,[7,1]);
```"></span></td><td><span data-qmd="```clj
14
```"></span></td></tr></tbody></table>
```

:::



### bit-rshift

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/bit-rshift 7 1)
```"></span></td><td><span data-qmd="```js
7 &gt;&gt; 1;
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/bit-rshift [7 1])
```"></span></td><td><span data-qmd="```js
(function (x,n){
  return x &gt;&gt; n;
}).apply(null,[7,1]);
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr></tbody></table>
```

:::



### bit-count

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/bit-count 16) (k/bit-count 10) (k/bit-count 3) (k/bit-count 7)]
```"></span></td><td><span data-qmd="```js
[k.bit_count(16),k.bit_count(10),k.bit_count(3),k.bit_count(7)];
```"></span></td><td><span data-qmd="```clj
[1 2 2 3]
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - Math Trigonometry


### sin

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/sin (/ 3.14159 4)) (k/sin (/ 3.14159 6))]
```"></span></td><td><span data-qmd="```js
[Math.sin(3.14159 / 4),Math.sin(3.14159 / 6)];
```"></span></td><td><span data-qmd="```clj
[0.7071063120935576 0.4999996169872557]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/sin [(/ 3.14159 4)])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.sin(num);
}).apply(null,[3.14159 / 4]);
```"></span></td><td><span data-qmd="```clj
0.7071063120935576
```"></span></td></tr></tbody></table>
```

:::



### cos

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/cos (/ 3.14159 4)) (k/cos (/ 3.14159 6))]
```"></span></td><td><span data-qmd="```js
[Math.cos(3.14159 / 4),Math.cos(3.14159 / 6)];
```"></span></td><td><span data-qmd="```clj
[0.7071072502792263 0.8660256249168368]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/cos [(/ 3.14159 4)])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.cos(num);
}).apply(null,[3.14159 / 4]);
```"></span></td><td><span data-qmd="```clj
0.7071072502792263
```"></span></td></tr></tbody></table>
```

:::



### tan

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/tan (/ 3.14159 4)) (k/tan (/ 3.14159 6))]
```"></span></td><td><span data-qmd="```js
[Math.tan(3.14159 / 4),Math.tan(3.14159 / 6)];
```"></span></td><td><span data-qmd="```clj
[0.9999986732059836 0.5773496795031555]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/tan [(/ 3.14159 4)])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.tan(num);
}).apply(null,[3.14159 / 4]);
```"></span></td><td><span data-qmd="```clj
0.9999986732059836
```"></span></td></tr></tbody></table>
```

:::



### asin

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/asin 0.5) (k/asin 0.8)]
```"></span></td><td><span data-qmd="```js
[Math.asin(0.5),Math.asin(0.8)];
```"></span></td><td><span data-qmd="```clj
[0.5235987755982989 0.9272952180016123]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/asin [0.5])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.asin(num);
}).apply(null,[0.5]);
```"></span></td><td><span data-qmd="```clj
0.5235987755982989
```"></span></td></tr></tbody></table>
```

:::



### acos

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/acos 0.5) (k/acos 0.8)]
```"></span></td><td><span data-qmd="```js
[Math.acos(0.5),Math.acos(0.8)];
```"></span></td><td><span data-qmd="```clj
[1.0471975511965979 0.6435011087932843]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/acos [0.5])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.acos(num);
}).apply(null,[0.5]);
```"></span></td><td><span data-qmd="```clj
1.0471975511965979
```"></span></td></tr></tbody></table>
```

:::



### atan

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/atan 0.5) (k/atan 0.8)]
```"></span></td><td><span data-qmd="```js
[Math.atan(0.5),Math.atan(0.8)];
```"></span></td><td><span data-qmd="```clj
[0.4636476090008061 0.6747409422235527]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/atan [0.5])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.atan(num);
}).apply(null,[0.5]);
```"></span></td><td><span data-qmd="```clj
0.4636476090008061
```"></span></td></tr></tbody></table>
```

:::



### sinh

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/sinh (/ 3.14159 4)) (k/sinh (/ 3.14159 6))]
```"></span></td><td><span data-qmd="```js
[Math.sinh(3.14159 / 4),Math.sinh(3.14159 / 6)];
```"></span></td><td><span data-qmd="```clj
[0.8686700827439109 0.5478529696006316]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/sinh [(/ 3.14159 4)])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.sinh(num);
}).apply(null,[3.14159 / 4]);
```"></span></td><td><span data-qmd="```clj
0.8686700827439109
```"></span></td></tr></tbody></table>
```

:::



### cosh

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/cosh (/ 3.14159 4)) (k/cosh (/ 3.14159 6))]
```"></span></td><td><span data-qmd="```js
[Math.cosh(3.14159 / 4),Math.cosh(3.14159 / 6)];
```"></span></td><td><span data-qmd="```clj
[1.324608512978198 1.1402380787801425]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/cosh [(/ 3.14159 4)])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.cosh(num);
}).apply(null,[3.14159 / 4]);
```"></span></td><td><span data-qmd="```clj
1.324608512978198
```"></span></td></tr></tbody></table>
```

:::



### tanh

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/tanh (/ 3.14159 4)) (k/tanh (/ 3.14159 6))]
```"></span></td><td><span data-qmd="```js
[Math.tanh(3.14159 / 4),Math.tanh(3.14159 / 6)];
```"></span></td><td><span data-qmd="```clj
[0.6557938245397708 0.4804724379900902]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/tanh [(/ 3.14159 4)])
```"></span></td><td><span data-qmd="```js
(function (num){
  return Math.tanh(num);
}).apply(null,[3.14159 / 4]);
```"></span></td><td><span data-qmd="```clj
0.6557938245397708
```"></span></td></tr></tbody></table>
```

:::



# Base Lib - Collection


## Base Lib - Sequence


### first

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/first [1 2 3])
```"></span></td><td><span data-qmd="```js
([1,2,3])[0];
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply [k/first [[1 2 3]]])
```"></span></td><td><span data-qmd="```js
(function (arr){
  return arr[0];
}).apply(null,[[1,2,3]]);
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr></tbody></table>
```

:::



### second

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/second [1 2 3])
```"></span></td><td><span data-qmd="```js
([1,2,3])[1];
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply [k/second [[1 2 3]]])
```"></span></td><td><span data-qmd="```js
(function (arr){
  return arr[1];
}).apply(null,[[1,2,3]]);
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr></tbody></table>
```

:::



### nth

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/nth [1 2 3] 2)
```"></span></td><td><span data-qmd="```js
([1,2,3])[2];
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply [k/nth [[1 2 3] 2]])
```"></span></td><td><span data-qmd="```js
(function (arr,i){
  return arr[i];
}).apply(null,[[1,2,3],2]);
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr></tbody></table>
```

:::



### last

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/last [1 2 3])
```"></span></td><td><span data-qmd="```js
([1,2,3])[[1,2,3].length + -1];
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply [k/last [[1 2 3]]])
```"></span></td><td><span data-qmd="```js
(function (arr){
  return arr[arr.length + -1];
}).apply(null,[[1,2,3]]);
```"></span></td><td><span data-qmd="```clj
3
```"></span></td></tr></tbody></table>
```

:::



### second-last

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/second-last [1 2 3])
```"></span></td><td><span data-qmd="```js
([1,2,3])[[1,2,3].length + -2];
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply [k/second-last [[1 2 3]]])
```"></span></td><td><span data-qmd="```js
(function (arr){
  return arr[arr.length + -2];
}).apply(null,[[1,2,3]]);
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr></tbody></table>
```

:::



### get-idx

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/get-idx [1 2 3] 1) (k/get-idx [1 2 3] 2)]
```"></span></td><td><span data-qmd="```js
[([1,2,3])[1],([1,2,3])[2]];
```"></span></td><td><span data-qmd="```clj
[2 3]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/get-idx [[1 2 3] 1])
```"></span></td><td><span data-qmd="```js
(function (arr,i,d){
  return arr[i] || d;
}).apply(null,[[1,2,3],1]);
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr></tbody></table>
```

:::



### set-idx

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out := [1 2 3 4 5]) (k/set-idx out 2 5) out)
```"></span></td><td><span data-qmd="```js
let out = [1,2,3,4,5];
out[2] = 5;
out;
```"></span></td><td><span data-qmd="```clj
[1 2 5 4 5]
```"></span></td></tr><tr><td><span data-qmd="```clj
(do (var out := [1 2 3 4 5]) (k/apply k/set-idx [out 2 5]) out)
```"></span></td><td><span data-qmd="```js
let out = [1,2,3,4,5];
(function (arr,i,val){
  return arr[i] = val;
}).apply(null,[out,2,5]);
out;
```"></span></td><td><span data-qmd="```clj
[1 2 5 4 5]
```"></span></td></tr></tbody></table>
```

:::



### is-empty?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/is-empty? nil) (k/is-empty? &quot;&quot;) (k/is-empty? &quot;123&quot;) (k/is-empty? []) (k/is-empty? [1 2 3]) (k/is-empty? {}) (k/is-empty? {:a 1, :b 2})]
```"></span></td><td><span data-qmd="```js
[
  k.is_emptyp(null),
  k.is_emptyp(&quot;&quot;),
  k.is_emptyp(&quot;123&quot;),
  k.is_emptyp([]),
  k.is_emptyp([1,2,3]),
  k.is_emptyp({}),
  k.is_emptyp({&quot;a&quot;:1,&quot;b&quot;:2})
];
```"></span></td><td><span data-qmd="```clj
[true true false true false true false]
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - Keys


### has-key?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/has-key? {:a 1} &quot;a&quot;) (k/has-key? {:a 1} &quot;b&quot;)]
```"></span></td><td><span data-qmd="```js
[({&quot;a&quot;:1})[&quot;a&quot;] != null,({&quot;a&quot;:1})[&quot;b&quot;] != null];
```"></span></td><td><span data-qmd="```clj
[true false]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/has-key? [{:a 1} &quot;a&quot;])
```"></span></td><td><span data-qmd="```js
(function (obj,k){
  return obj[k] != null;
}).apply(null,[{&quot;a&quot;:1},&quot;a&quot;]);
```"></span></td><td><span data-qmd="```clj
true
```"></span></td></tr></tbody></table>
```

:::



### del-key

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out := {:a 1, :b 2}) (k/del-key out &quot;a&quot;) out)
```"></span></td><td><span data-qmd="```js
let out = {&quot;a&quot;:1,&quot;b&quot;:2};
delete out[&quot;a&quot;];
out;
```"></span></td><td><span data-qmd="```clj
{&quot;b&quot; 2}
```"></span></td></tr><tr><td><span data-qmd="```clj
(do (var out := {:a 1, :b 2}) (k/apply k/del-key [out &quot;a&quot;]) out)
```"></span></td><td><span data-qmd="```js
let out = {&quot;a&quot;:1,&quot;b&quot;:2};
(function (obj,k){
  return delete obj[k];
}).apply(null,[out,&quot;a&quot;]);
out;
```"></span></td><td><span data-qmd="```clj
{&quot;b&quot; 2}
```"></span></td></tr></tbody></table>
```

:::



### get-key

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/get-key {:a 1} &quot;a&quot;) (k/get-key {:a 1} &quot;b&quot;)]
```"></span></td><td><span data-qmd="```js
[({&quot;a&quot;:1})[&quot;a&quot;],({&quot;a&quot;:1})[&quot;b&quot;]];
```"></span></td><td><span data-qmd="```clj
[1 nil]
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/get-key [{:a 1} &quot;a&quot;])
```"></span></td><td><span data-qmd="```js
(function (obj,k,d){
  return obj[k] || d;
}).apply(null,[{&quot;a&quot;:1},&quot;a&quot;]);
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr><tr><td><span data-qmd="```clj
(k/apply k/get-key [{:a 1} &quot;b&quot; 2])
```"></span></td><td><span data-qmd="```js
(function (obj,k,d){
  return obj[k] || d;
}).apply(null,[{&quot;a&quot;:1},&quot;b&quot;,2]);
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr></tbody></table>
```

:::



### get-path

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/get-path {:a {:b {:c 1}}} [&quot;a&quot; &quot;b&quot; &quot;c&quot;]) (k/get-path {:a 1} [&quot;b&quot;] 2)]
```"></span></td><td><span data-qmd="```js
[({&quot;a&quot;:{&quot;b&quot;:{&quot;c&quot;:1}}})[&quot;a&quot;][&quot;b&quot;][&quot;c&quot;],({&quot;a&quot;:1})[&quot;b&quot;] || 2];
```"></span></td><td><span data-qmd="```clj
[1 2]
```"></span></td></tr></tbody></table>
```

:::



### set-key

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out := {:a 1, :b 2}) (k/set-key out &quot;a&quot; 5) out)
```"></span></td><td><span data-qmd="```js
let out = {&quot;a&quot;:1,&quot;b&quot;:2};
out[&quot;a&quot;] = 5;
out;
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 5, &quot;b&quot; 2}
```"></span></td></tr><tr><td><span data-qmd="```clj
(do (var out := {:a 1, :b 2}) (k/apply k/set-key [out &quot;a&quot; 5]) out)
```"></span></td><td><span data-qmd="```js
let out = {&quot;a&quot;:1,&quot;b&quot;:2};
(function (obj,k,val){
  return obj[k] = val;
}).apply(null,[out,&quot;a&quot;,5]);
out;
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 5, &quot;b&quot; 2}
```"></span></td></tr></tbody></table>
```

:::



### copy-key

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out := {}) (k/copy-key out {:a 1} &quot;a&quot;) out)
```"></span></td><td><span data-qmd="```js
let out = {};
out[&quot;a&quot;] = ({&quot;a&quot;:1})[&quot;a&quot;];
out;
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1}
```"></span></td></tr><tr><td><span data-qmd="```clj
(do (var out := {}) (k/copy-key out {:a 1} [&quot;c&quot; &quot;a&quot;]) out)
```"></span></td><td><span data-qmd="```js
let out = {};
out[&quot;c&quot;] = ({&quot;a&quot;:1})[&quot;a&quot;];
out;
```"></span></td><td><span data-qmd="```clj
{&quot;c&quot; 1}
```"></span></td></tr><tr><td><span data-qmd="```clj
(do (var out := {}) (k/apply k/copy-key [out {:a 1, :b 2} &quot;a&quot;]) out)
```"></span></td><td><span data-qmd="```js
let out = {};
(function (obj,src,k_or_arr){
  return obj[k_or_arr] = src[k_or_arr];
}).apply(null,[out,{&quot;a&quot;:1,&quot;b&quot;:2},&quot;a&quot;]);
out;
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1}
```"></span></td></tr></tbody></table>
```

:::



### swap-key

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out := {:a 1, :b 2}) (k/swap-key out &quot;a&quot; k/inc) out)
```"></span></td><td><span data-qmd="```js
let out = {&quot;a&quot;:1,&quot;b&quot;:2};
out[&quot;a&quot;] = (out[&quot;a&quot;] + 1)
out;
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 2, &quot;b&quot; 2}
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - Array


### x:arr-push

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out [1 2 3]) (k/x:arr-push out 4) out)
```"></span></td><td><span data-qmd="```js
let out = [1,2,3];
out.push(4);
out;
```"></span></td><td><span data-qmd="```clj
[1 2 3 4]
```"></span></td></tr></tbody></table>
```

:::



### x:arr-pop

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out [1 2 3]) (k/x:arr-pop out) out)
```"></span></td><td><span data-qmd="```js
let out = [1,2,3];
out.pop();
out;
```"></span></td><td><span data-qmd="```clj
[1 2]
```"></span></td></tr></tbody></table>
```

:::



### x:arr-push-first

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out [1 2 3]) (k/x:arr-push-first out 0) out)
```"></span></td><td><span data-qmd="```js
let out = [1,2,3];
out.unshift(0);
out;
```"></span></td><td><span data-qmd="```clj
[0 1 2 3]
```"></span></td></tr></tbody></table>
```

:::



### x:arr-pop-first

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out [1 2 3]) (k/x:arr-pop-first out) out)
```"></span></td><td><span data-qmd="```js
let out = [1,2,3];
out.shift();
out;
```"></span></td><td><span data-qmd="```clj
[2 3]
```"></span></td></tr></tbody></table>
```

:::



### x:arr-insert

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out [1 2 3]) (k/x:arr-insert out (x:offset 2) &quot;a&quot;) out)
```"></span></td><td><span data-qmd="```js
let out = [1,2,3];
out.splice(2,0,&quot;a&quot;);
out;
```"></span></td><td><span data-qmd="```clj
[1 2 &quot;a&quot; 3]
```"></span></td></tr></tbody></table>
```

:::



### arr-lookup

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-lookup [&quot;a&quot; &quot;b&quot; &quot;c&quot;])
```"></span></td><td><span data-qmd="```js
k.arr_lookup([&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]);
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; true, &quot;b&quot; true, &quot;c&quot; true}
```"></span></td></tr></tbody></table>
```

:::



### arr-every

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/arr-every [1 2 3] k/odd?) (k/arr-every [1 3] k/odd?)]
```"></span></td><td><span data-qmd="```js
[
  k.arr_every([1,2,3],function (x){
  return !(0 == (x % 2));
}),
  k.arr_every([1,3],function (x){
  return !(0 == (x % 2));
})
];
```"></span></td><td><span data-qmd="```clj
[false true]
```"></span></td></tr></tbody></table>
```

:::



### arr-some

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/arr-some [1 2 3] k/even?) (k/arr-some [1 3] k/even?)]
```"></span></td><td><span data-qmd="```js
[
  k.arr_some([1,2,3],function (x){
  return 0 == (x % 2);
}),
  k.arr_some([1,3],function (x){
  return 0 == (x % 2);
})
];
```"></span></td><td><span data-qmd="```clj
[true false]
```"></span></td></tr></tbody></table>
```

:::



### arr-each

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out []) (k/arr-each [1 2 3 4 5] (fn [e] (x:arr-push out (+ 1 e)))) out)
```"></span></td><td><span data-qmd="```js
let out = [];
k.arr_each([1,2,3,4,5],function (e){
  out.push(1 + e);
});
out;
```"></span></td><td><span data-qmd="```clj
[2 3 4 5 6]
```"></span></td></tr></tbody></table>
```

:::



### arr-omit

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-omit [&quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot;] 2)
```"></span></td><td><span data-qmd="```js
k.arr_omit([&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;],2);
```"></span></td><td><span data-qmd="```clj
[&quot;a&quot; &quot;b&quot; &quot;d&quot;]
```"></span></td></tr></tbody></table>
```

:::



### arr-reverse

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-reverse [1 2 3 4 5])
```"></span></td><td><span data-qmd="```js
k.arr_reverse([1,2,3,4,5]);
```"></span></td><td><span data-qmd="```clj
[5 4 3 2 1]
```"></span></td></tr></tbody></table>
```

:::



### arr-find

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-find [1 2 3 4 5] (fn:&gt; [x] (== x 3)))
```"></span></td><td><span data-qmd="```js
k.arr_find([1,2,3,4,5],function (x){
  return x == 3;
});
```"></span></td><td><span data-qmd="```clj
2
```"></span></td></tr></tbody></table>
```

:::



### arr-zip

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-zip [&quot;a&quot; &quot;b&quot; &quot;c&quot;] [1 2 3])
```"></span></td><td><span data-qmd="```js
k.arr_zip([&quot;a&quot;,&quot;b&quot;,&quot;c&quot;],[1,2,3]);
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;b&quot; 2, &quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



### arr-map

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-map [1 2 3 4 5] k/inc)
```"></span></td><td><span data-qmd="```js
k.arr_map([1,2,3,4,5],function (x){
  return x + 1;
});
```"></span></td><td><span data-qmd="```clj
[2 3 4 5 6]
```"></span></td></tr></tbody></table>
```

:::



### arr-clone

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-clone [1 2 3])
```"></span></td><td><span data-qmd="```js
k.arr_clone([1,2,3]);
```"></span></td><td><span data-qmd="```clj
[1 2 3]
```"></span></td></tr></tbody></table>
```

:::



### arr-append

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out [1 2 3]) (k/arr-append out [4 5]) out)
```"></span></td><td><span data-qmd="```js
let out = [1,2,3];
k.arr_append(out,[4,5]);
out;
```"></span></td><td><span data-qmd="```clj
[1 2 3 4 5]
```"></span></td></tr></tbody></table>
```

:::



### arr-slice

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-slice [1 2 3 4 5] 1 3)
```"></span></td><td><span data-qmd="```js
k.arr_slice([1,2,3,4,5],1,3);
```"></span></td><td><span data-qmd="```clj
[2 3]
```"></span></td></tr></tbody></table>
```

:::



### arr-rslice

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-rslice [1 2 3 4 5] 1 3)
```"></span></td><td><span data-qmd="```js
k.arr_rslice([1,2,3,4,5],1,3);
```"></span></td><td><span data-qmd="```clj
[3 2]
```"></span></td></tr></tbody></table>
```

:::



### arr-tail

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-tail [1 2 3 4 5] 3)
```"></span></td><td><span data-qmd="```js
k.arr_tail([1,2,3,4,5],3);
```"></span></td><td><span data-qmd="```clj
[5 4 3]
```"></span></td></tr></tbody></table>
```

:::



### arr-mapcat

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-mapcat [1 2 3] (fn:&gt; [k] [k k k]))
```"></span></td><td><span data-qmd="```js
k.arr_mapcat([1,2,3],function (k){
  return [k,k,k];
});
```"></span></td><td><span data-qmd="```clj
[1 1 1 2 2 2 3 3 3]
```"></span></td></tr></tbody></table>
```

:::



### arr-partition

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-partition [1 2 3 4 5 6 7 8 9 10] 3)
```"></span></td><td><span data-qmd="```js
k.arr_partition([1,2,3,4,5,6,7,8,9,10],3);
```"></span></td><td><span data-qmd="```clj
[[1 2 3] [4 5 6] [7 8 9] [10]]
```"></span></td></tr></tbody></table>
```

:::



### arr-filter

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-filter [1 2 3 4 5] k/odd?)
```"></span></td><td><span data-qmd="```js
k.arr_filter([1,2,3,4,5],function (x){
  return !(0 == (x % 2));
});
```"></span></td><td><span data-qmd="```clj
[1 3 5]
```"></span></td></tr></tbody></table>
```

:::



### arr-keep

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-keep [1 2 3 4 5] (fn:&gt; [x] (:? (k/odd? x) x)))
```"></span></td><td><span data-qmd="```js
k.arr_keep([1,2,3,4,5],function (x){
  return !(0 == (x % 2)) ? x : null;
});
```"></span></td><td><span data-qmd="```clj
[1 3 5]
```"></span></td></tr></tbody></table>
```

:::



### arr-keepf

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-keepf [1 2 3 4 5] k/odd? k/identity)
```"></span></td><td><span data-qmd="```js
k.arr_keepf([1,2,3,4,5],function (x){
  return !(0 == (x % 2));
},k.identity);
```"></span></td><td><span data-qmd="```clj
[1 3 5]
```"></span></td></tr></tbody></table>
```

:::



### arr-juxt

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-juxt [[&quot;a&quot; 1] [&quot;b&quot; 2] [&quot;c&quot; 3]] k/first k/second)
```"></span></td><td><span data-qmd="```js
k.arr_juxt([[&quot;a&quot;,1],[&quot;b&quot;,2],[&quot;c&quot;,3]],function (arr){
  return arr[0];
},function (arr){
  return arr[1];
});
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;b&quot; 2, &quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



### arr-foldl

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-foldl [1 2 3 4 5] k/add 0)
```"></span></td><td><span data-qmd="```js
k.arr_foldl([1,2,3,4,5],function (a,b){
  return a + b;
},0);
```"></span></td><td><span data-qmd="```clj
15
```"></span></td></tr></tbody></table>
```

:::



### arr-foldr

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-foldr [1 2 3 4 5] k/step-push [])
```"></span></td><td><span data-qmd="```js
k.arr_foldr([1,2,3,4,5],k.step_push,[]);
```"></span></td><td><span data-qmd="```clj
[5 4 3 2 1]
```"></span></td></tr></tbody></table>
```

:::



### arr-pipel

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-pipel [(fn:&gt; [x] (* x 10)) (fn:&gt; [x] (+ x 10))] 1)
```"></span></td><td><span data-qmd="```js
k.arr_pipel([
  function (x){
  return x * 10;
},
  function (x){
  return x + 10;
}
],1);
```"></span></td><td><span data-qmd="```clj
20
```"></span></td></tr></tbody></table>
```

:::



### arr-piper

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-piper [(fn:&gt; [x] (* x 10)) (fn:&gt; [x] (+ x 10))] 1)
```"></span></td><td><span data-qmd="```js
k.arr_piper([
  function (x){
  return x * 10;
},
  function (x){
  return x + 10;
}
],1);
```"></span></td><td><span data-qmd="```clj
110
```"></span></td></tr></tbody></table>
```

:::



### arr-group-by

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-group-by [[&quot;a&quot; 1] [&quot;a&quot; 2] [&quot;b&quot; 3] [&quot;b&quot; 4]] k/first k/second)
```"></span></td><td><span data-qmd="```js
k.arr_group_by([[&quot;a&quot;,1],[&quot;a&quot;,2],[&quot;b&quot;,3],[&quot;b&quot;,4]],function (arr){
  return arr[0];
},function (arr){
  return arr[1];
});
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; [1 2], &quot;b&quot; [3 4]}
```"></span></td></tr></tbody></table>
```

:::



### arr-range

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/arr-range 10) (k/arr-range [10]) (k/arr-range [2 8]) (k/arr-range [2 9 2])]
```"></span></td><td><span data-qmd="```js
[
  k.arr_range(10),
  k.arr_range([10]),
  k.arr_range([2,8]),
  k.arr_range([2,9,2])
];
```"></span></td><td><span data-qmd="```clj
[[0 1 2 3 4 5 6 7 8 9] [0 1 2 3 4 5 6 7 8 9] [2 3 4 5 6 7] [2 4 6 8]]
```"></span></td></tr></tbody></table>
```

:::



### arr-intersection

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-intersection [&quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot;] [&quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot;])
```"></span></td><td><span data-qmd="```js
k.arr_intersection([&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;],[&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;]);
```"></span></td><td><span data-qmd="```clj
[&quot;c&quot; &quot;d&quot;]
```"></span></td></tr></tbody></table>
```

:::



### arr-difference

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-difference [&quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot;] [&quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot;])
```"></span></td><td><span data-qmd="```js
k.arr_difference([&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;],[&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;]);
```"></span></td><td><span data-qmd="```clj
[&quot;e&quot; &quot;f&quot;]
```"></span></td></tr></tbody></table>
```

:::



### arr-union 

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-union [&quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot;] [&quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot;])
```"></span></td><td><span data-qmd="```js
k.arr_union([&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;],[&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;]);
```"></span></td><td><span data-qmd="```clj
[&quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot;]
```"></span></td></tr></tbody></table>
```

:::



### arr-sort

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/arr-sort [3 4 1 2] k/identity (fn:&gt; [a b] (&lt; a b))) (k/arr-sort [3 4 1 2] k/identity (fn:&gt; [a b] (&lt; b a))) (k/arr-sort [[&quot;c&quot; 3] [&quot;d&quot; 4] [&quot;a&quot; 1] [&quot;b&quot; 2]] k/first (fn:&gt; [a b] (x:arr-str-comp a b))) (k/arr-sort [[&quot;c&quot; 3] [&quot;d&quot; 4] [&quot;a&quot; 1] [&quot;b&quot; 2]] k/second (fn:&gt; [a b] (&lt; a b)))]
```"></span></td><td><span data-qmd="```js
[
  k.arr_sort([3,4,1,2],k.identity,function (a,b){
  return a &lt; b;
}),
  k.arr_sort([3,4,1,2],k.identity,function (a,b){
  return b &lt; a;
}),
  k.arr_sort([[&quot;c&quot;,3],[&quot;d&quot;,4],[&quot;a&quot;,1],[&quot;b&quot;,2]],function (arr){
  return arr[0];
},function (a,b){
  return 0 &gt; a.localeCompare(b);
}),
  k.arr_sort([[&quot;c&quot;,3],[&quot;d&quot;,4],[&quot;a&quot;,1],[&quot;b&quot;,2]],function (arr){
  return arr[1];
},function (a,b){
  return a &lt; b;
})
];
```"></span></td><td><span data-qmd="```clj
[[1 2 3 4] [4 3 2 1] [[&quot;a&quot; 1] [&quot;b&quot; 2] [&quot;c&quot; 3] [&quot;d&quot; 4]] [[&quot;a&quot; 1] [&quot;b&quot; 2] [&quot;c&quot; 3] [&quot;d&quot; 4]]]
```"></span></td></tr></tbody></table>
```

:::



### arr-sorted-merge

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/arr-sorted-merge [1 2 3] [4 5 6] k/lt) (k/arr-sorted-merge [1 2 4] [3 5 6] k/lt) (k/arr-sorted-merge (k/arr-reverse [1 2 4]) (k/arr-reverse [3 5 6]) k/gt)]
```"></span></td><td><span data-qmd="```js
[
  k.arr_sorted_merge([1,2,3],[4,5,6],function (a,b){
  return a &lt; b;
}),
  k.arr_sorted_merge([1,2,4],[3,5,6],function (a,b){
  return a &lt; b;
}),
  k.arr_sorted_merge(k.arr_reverse([1,2,4]),k.arr_reverse([3,5,6]),function (a,b){
  return a &gt; b;
})
];
```"></span></td><td><span data-qmd="```clj
[[1 2 3 4 5 6] [1 2 3 4 5 6] [6 5 4 3 2 1]]
```"></span></td></tr></tbody></table>
```

:::



### arr-shuffle

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-shuffle [1 2 3 4 5])
```"></span></td><td><span data-qmd="```js
k.arr_shuffle([1,2,3,4,5]);
```"></span></td><td><span data-qmd="```clj
[4 5 1 3 2]
```"></span></td></tr></tbody></table>
```

:::



### arr-pushl

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/arr-pushl [1 2 3 4] 5) (k/arr-pushl [1 2 3 4] 5 4)]
```"></span></td><td><span data-qmd="```js
[k.arr_pushl([1,2,3,4],5),k.arr_pushl([1,2,3,4],5,4)];
```"></span></td><td><span data-qmd="```clj
[[1 2 3 4 5] [2 3 4 5]]
```"></span></td></tr></tbody></table>
```

:::



### arr-pushr

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/arr-pushr [1 2 3 4] 5) (k/arr-pushr [1 2 3 4] 5 4)]
```"></span></td><td><span data-qmd="```js
[k.arr_pushr([1,2,3,4],5),k.arr_pushr([1,2,3,4],5,4)];
```"></span></td><td><span data-qmd="```clj
[[5 1 2 3 4] [5 1 2 3]]
```"></span></td></tr></tbody></table>
```

:::



### arr-join

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-join [&quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot;] &quot; &quot;)
```"></span></td><td><span data-qmd="```js
k.arr_join([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;],&quot; &quot;);
```"></span></td><td><span data-qmd="```clj
&quot;1 2 3 4&quot;
```"></span></td></tr></tbody></table>
```

:::



### arr-interpose

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-interpose [&quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot;] &quot;XX&quot;)
```"></span></td><td><span data-qmd="```js
k.arr_interpose([&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;],&quot;XX&quot;);
```"></span></td><td><span data-qmd="```clj
[&quot;1&quot; &quot;XX&quot; &quot;2&quot; &quot;XX&quot; &quot;3&quot; &quot;XX&quot; &quot;4&quot;]
```"></span></td></tr></tbody></table>
```

:::



### arr-repeat

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/arr-repeat &quot;1&quot; 4) (k/arr-repeat (k/inc-fn -1) 4)]
```"></span></td><td><span data-qmd="```js
[k.arr_repeat(&quot;1&quot;,4),k.arr_repeat(k.inc_fn(-1),4)];
```"></span></td><td><span data-qmd="```clj
[[&quot;1&quot; &quot;1&quot; &quot;1&quot; &quot;1&quot;] [0 1 2 3]]
```"></span></td></tr></tbody></table>
```

:::



### arr-random

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-random [1 2 3 4])
```"></span></td><td><span data-qmd="```js
k.arr_random([1,2,3,4]);
```"></span></td><td><span data-qmd="```clj
4
```"></span></td></tr></tbody></table>
```

:::



### arr-normalise

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-normalise [1 2 3 4])
```"></span></td><td><span data-qmd="```js
k.arr_normalise([1,2,3,4]);
```"></span></td><td><span data-qmd="```clj
[0.1 0.2 0.3 0.4]
```"></span></td></tr></tbody></table>
```

:::



### arr-sample

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/arr-sample [&quot;left&quot; &quot;right&quot; &quot;up&quot; &quot;down&quot;] [0.1 0.2 0.3 0.4])
```"></span></td><td><span data-qmd="```js
k.arr_sample([&quot;left&quot;,&quot;right&quot;,&quot;up&quot;,&quot;down&quot;],[0.1,0.2,0.3,0.4]);
```"></span></td><td><span data-qmd="```clj
&quot;right&quot;
```"></span></td></tr></tbody></table>
```

:::



### arrayify

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/arrayify 1) (k/arrayify [1])]
```"></span></td><td><span data-qmd="```js
[k.arrayify(1),k.arrayify([1])];
```"></span></td><td><span data-qmd="```clj
[[1] [1]]
```"></span></td></tr></tbody></table>
```

:::



## Base Lib - Object


### obj-empty?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/obj-empty? {}) (k/obj-empty? {:a 1})]
```"></span></td><td><span data-qmd="```js
[k.obj_emptyp({}),k.obj_emptyp({&quot;a&quot;:1})];
```"></span></td><td><span data-qmd="```clj
[true false]
```"></span></td></tr></tbody></table>
```

:::



### obj-not-empty?

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/obj-not-empty? {}) (k/obj-not-empty? {:a 1})]
```"></span></td><td><span data-qmd="```js
[k.obj_not_emptyp({}),k.obj_not_emptyp({&quot;a&quot;:1})];
```"></span></td><td><span data-qmd="```clj
[false true]
```"></span></td></tr></tbody></table>
```

:::



### obj-first-key

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-first-key {:a 1})
```"></span></td><td><span data-qmd="```js
k.obj_first_key({&quot;a&quot;:1});
```"></span></td><td><span data-qmd="```clj
&quot;a&quot;
```"></span></td></tr></tbody></table>
```

:::



### obj-first-val

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-first-val {:a 1})
```"></span></td><td><span data-qmd="```js
k.obj_first_val({&quot;a&quot;:1});
```"></span></td><td><span data-qmd="```clj
1
```"></span></td></tr></tbody></table>
```

:::



### obj-keys

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-keys {:a 1, :b 2})
```"></span></td><td><span data-qmd="```js
k.obj_keys({&quot;a&quot;:1,&quot;b&quot;:2});
```"></span></td><td><span data-qmd="```clj
[&quot;a&quot; &quot;b&quot;]
```"></span></td></tr></tbody></table>
```

:::



### obj-vals

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-vals {:a 1, :b 2})
```"></span></td><td><span data-qmd="```js
k.obj_vals({&quot;a&quot;:1,&quot;b&quot;:2});
```"></span></td><td><span data-qmd="```clj
[1 2]
```"></span></td></tr></tbody></table>
```

:::



### obj-pairs

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-pairs {:a 1, :b 2, :c 2})
```"></span></td><td><span data-qmd="```js
k.obj_pairs({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:2});
```"></span></td><td><span data-qmd="```clj
[[&quot;a&quot; 1] [&quot;b&quot; 2] [&quot;c&quot; 2]]
```"></span></td></tr></tbody></table>
```

:::



### obj-clone

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-clone {:a 1, :b 2, :c 3})
```"></span></td><td><span data-qmd="```js
k.obj_clone({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3});
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;b&quot; 2, &quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



### obj-assign

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out := {:a 1}) (k/obj-assign out {:b 2, :c 3}) out)
```"></span></td><td><span data-qmd="```js
let out = {&quot;a&quot;:1};
k.obj_assign(out,{&quot;b&quot;:2,&quot;c&quot;:3});
out;
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;b&quot; 2, &quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



### obj-assign-nested

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/obj-assign-nested {:a 1} {:b 2}) (k/obj-assign-nested {:a {:b {:c 1}}} {:a {:b {:d 1}}})]
```"></span></td><td><span data-qmd="```js
[
  k.obj_assign_nested({&quot;a&quot;:1},{&quot;b&quot;:2}),
  k.obj_assign_nested({&quot;a&quot;:{&quot;b&quot;:{&quot;c&quot;:1}}},{&quot;a&quot;:{&quot;b&quot;:{&quot;d&quot;:1}}})
];
```"></span></td><td><span data-qmd="```clj
[{&quot;a&quot; 1, &quot;b&quot; 2} {&quot;a&quot; {&quot;b&quot; {&quot;d&quot; 1, &quot;c&quot; 1}}}]
```"></span></td></tr></tbody></table>
```

:::



### obj-assign-with

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-assign-with {:a {:b true}} {:a {:c true}} k/obj-assign)
```"></span></td><td><span data-qmd="```js
k.obj_assign_with({&quot;a&quot;:{&quot;b&quot;:true}},{&quot;a&quot;:{&quot;c&quot;:true}},k.obj_assign);
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; {&quot;b&quot; true, &quot;c&quot; true}}
```"></span></td></tr></tbody></table>
```

:::



### obj-from-pairs

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-from-pairs [[&quot;a&quot; 1] [&quot;b&quot; 2] [&quot;c&quot; 3]])
```"></span></td><td><span data-qmd="```js
k.obj_from_pairs([[&quot;a&quot;,1],[&quot;b&quot;,2],[&quot;c&quot;,3]]);
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;b&quot; 2, &quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



### obj-del

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-del {:a 1, :b 2, :c 3} [&quot;a&quot; &quot;b&quot;])
```"></span></td><td><span data-qmd="```js
k.obj_del({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3},[&quot;a&quot;,&quot;b&quot;]);
```"></span></td><td><span data-qmd="```clj
{&quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



### obj-del-all

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-del-all {:a 1, :b 2, :c 3})
```"></span></td><td><span data-qmd="```js
k.obj_del_all({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3});
```"></span></td><td><span data-qmd="```clj
{}
```"></span></td></tr></tbody></table>
```

:::



### obj-pick

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-pick {:a 1, :b 2, :c 3} [&quot;a&quot; &quot;b&quot;])
```"></span></td><td><span data-qmd="```js
k.obj_pick({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3},[&quot;a&quot;,&quot;b&quot;]);
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;b&quot; 2}
```"></span></td></tr></tbody></table>
```

:::



### obj-omit

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-omit {:a 1, :b 2, :c 3} [&quot;a&quot; &quot;b&quot;])
```"></span></td><td><span data-qmd="```js
k.obj_omit({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3},[&quot;a&quot;,&quot;b&quot;]);
```"></span></td><td><span data-qmd="```clj
{&quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



### obj-transpose

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-transpose {:a &quot;x&quot;, :b &quot;y&quot;, :c &quot;z&quot;})
```"></span></td><td><span data-qmd="```js
k.obj_transpose({&quot;a&quot;:&quot;x&quot;,&quot;b&quot;:&quot;y&quot;,&quot;c&quot;:&quot;z&quot;});
```"></span></td><td><span data-qmd="```clj
{&quot;z&quot; &quot;c&quot;, &quot;x&quot; &quot;a&quot;, &quot;y&quot; &quot;b&quot;}
```"></span></td></tr></tbody></table>
```

:::



### obj-nest

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-nest [&quot;a&quot; &quot;b&quot;] 1)
```"></span></td><td><span data-qmd="```js
k.obj_nest([&quot;a&quot;,&quot;b&quot;],1);
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; {&quot;b&quot; 1}}
```"></span></td></tr></tbody></table>
```

:::



### obj-map

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-map {:a 1, :b 2, :c 3} k/inc)
```"></span></td><td><span data-qmd="```js
k.obj_map({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3},function (x){
  return x + 1;
});
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 2, &quot;b&quot; 3, &quot;c&quot; 4}
```"></span></td></tr></tbody></table>
```

:::



### obj-filter

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-filter {:a 1, :b 2, :c 3} k/odd?)
```"></span></td><td><span data-qmd="```js
k.obj_filter({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3},function (x){
  return !(0 == (x % 2));
});
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



### obj-keep

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-keep {:a 1, :b 2, :c 3} (fn:&gt; [x] (:? (k/odd? x) x)))
```"></span></td><td><span data-qmd="```js
k.obj_keep({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3},function (x){
  return !(0 == (x % 2)) ? x : null;
});
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



### obj-keepf

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-keepf {:a 1, :b 2, :c 3} k/odd? k/identity)
```"></span></td><td><span data-qmd="```js
k.obj_keepf({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3},function (x){
  return !(0 == (x % 2));
},k.identity);
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



### obj-intersection

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-intersection {:a true, :b true} {:c true, :b true})
```"></span></td><td><span data-qmd="```js
k.obj_intersection({&quot;a&quot;:true,&quot;b&quot;:true},{&quot;c&quot;:true,&quot;b&quot;:true});
```"></span></td><td><span data-qmd="```clj
[&quot;b&quot;]
```"></span></td></tr></tbody></table>
```

:::



### obj-difference

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/obj-difference {:a true, :b true} {:c true, :b true}) (k/obj-difference {:c true, :b true} {:a true, :b true})]
```"></span></td><td><span data-qmd="```js
[
  k.obj_difference({&quot;a&quot;:true,&quot;b&quot;:true},{&quot;c&quot;:true,&quot;b&quot;:true}),
  k.obj_difference({&quot;c&quot;:true,&quot;b&quot;:true},{&quot;a&quot;:true,&quot;b&quot;:true})
];
```"></span></td><td><span data-qmd="```clj
[[&quot;c&quot;] [&quot;a&quot;]]
```"></span></td></tr></tbody></table>
```

:::



### obj-keys-nested

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-keys-nested {:a {:b {:c 1, :d 2}, :e {:f 4, :g 5}}} [])
```"></span></td><td><span data-qmd="```js
k.obj_keys_nested({&quot;a&quot;:{&quot;b&quot;:{&quot;c&quot;:1,&quot;d&quot;:2},&quot;e&quot;:{&quot;f&quot;:4,&quot;g&quot;:5}}},[]);
```"></span></td><td><span data-qmd="```clj
[[[&quot;a&quot; &quot;b&quot; &quot;c&quot;] 1] [[&quot;a&quot; &quot;b&quot; &quot;d&quot;] 2] [[&quot;a&quot; &quot;e&quot; &quot;f&quot;] 4] [[&quot;a&quot; &quot;e&quot; &quot;g&quot;] 5]]
```"></span></td></tr></tbody></table>
```

:::



### to-flat

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/to-flat {:a 1, :b 2, :c 3}) (k/to-flat (k/obj-pairs {:a 1, :b 2, :c 3}))]
```"></span></td><td><span data-qmd="```js
[
  k.to_flat({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3}),
  k.to_flat(k.obj_pairs({&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3}))
];
```"></span></td><td><span data-qmd="```clj
[[&quot;a&quot; 1 &quot;b&quot; 2 &quot;c&quot; 3] [&quot;a&quot; 1 &quot;b&quot; 2 &quot;c&quot; 3]]
```"></span></td></tr></tbody></table>
```

:::



### from-flat

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/from-flat [&quot;a&quot; 1 &quot;b&quot; 2 &quot;c&quot; 3] k/step-set-key {})
```"></span></td><td><span data-qmd="```js
k.from_flat([&quot;a&quot;,1,&quot;b&quot;,2,&quot;c&quot;,3],k.step_set_key,{});
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;b&quot; 2, &quot;c&quot; 3}
```"></span></td></tr></tbody></table>
```

:::



### get-in

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/get-in {:a {:b {:c 1}}} [&quot;a&quot; &quot;b&quot;])
```"></span></td><td><span data-qmd="```js
k.get_in({&quot;a&quot;:{&quot;b&quot;:{&quot;c&quot;:1}}},[&quot;a&quot;,&quot;b&quot;]);
```"></span></td><td><span data-qmd="```clj
{&quot;c&quot; 1}
```"></span></td></tr></tbody></table>
```

:::



### set-in

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(do (var out {:a {:b {:c 1}}}) (k/set-in out [&quot;a&quot; &quot;b&quot;] 2) out)
```"></span></td><td><span data-qmd="```js
let out = {&quot;a&quot;:{&quot;b&quot;:{&quot;c&quot;:1}}};
k.set_in(out,[&quot;a&quot;,&quot;b&quot;],2);
out;
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; {&quot;b&quot; 2}}
```"></span></td></tr></tbody></table>
```

:::



### eq-nested

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/eq-nested {:a {:b {:c 1}}} {:a {:b {:c 1}}}) (k/eq-nested {:a {:b {:c 1}}} {:a {:b {:c 2}}}) (k/eq-nested 1 1) (k/eq-nested 1 2) (k/eq-nested [1] [1]) (k/eq-nested [1] [2]) (k/eq-nested {:a [{:b {:c 1}}]} {:a [{:b {:c 1}}]}) (k/eq-nested {:a [{:b {:c 1}}]} {:a [{:b {:c 2}}]})]
```"></span></td><td><span data-qmd="```js
[
  k.eq_nested({&quot;a&quot;:{&quot;b&quot;:{&quot;c&quot;:1}}},{&quot;a&quot;:{&quot;b&quot;:{&quot;c&quot;:1}}}),
  k.eq_nested({&quot;a&quot;:{&quot;b&quot;:{&quot;c&quot;:1}}},{&quot;a&quot;:{&quot;b&quot;:{&quot;c&quot;:2}}}),
  k.eq_nested(1,1),
  k.eq_nested(1,2),
  k.eq_nested([1],[1]),
  k.eq_nested([1],[2]),
  k.eq_nested({&quot;a&quot;:[{&quot;b&quot;:{&quot;c&quot;:1}}]},{&quot;a&quot;:[{&quot;b&quot;:{&quot;c&quot;:1}}]}),
  k.eq_nested({&quot;a&quot;:[{&quot;b&quot;:{&quot;c&quot;:1}}]},{&quot;a&quot;:[{&quot;b&quot;:{&quot;c&quot;:2}}]})
];
```"></span></td><td><span data-qmd="```clj
[true false true false true false true false]
```"></span></td></tr></tbody></table>
```

:::



### obj-diff

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/obj-diff {:a 1, :b 2} {:a 1, :c 2})
```"></span></td><td><span data-qmd="```js
k.obj_diff({&quot;a&quot;:1,&quot;b&quot;:2},{&quot;a&quot;:1,&quot;c&quot;:2});
```"></span></td><td><span data-qmd="```clj
{&quot;c&quot; 2}
```"></span></td></tr></tbody></table>
```

:::



### obj-diff-nested

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
[(k/obj-diff-nested {:a 1, :b 2} {:a 1, :c 2}) (k/obj-diff-nested {:a 1, :b {:c 3}} {:a 1, :b {:d 3}}) (k/obj-diff-nested {:a 1, :b {:c {:d 3}}} {:a 1, :b {:c {:e 3}}})]
```"></span></td><td><span data-qmd="```js
[
  k.obj_diff_nested({&quot;a&quot;:1,&quot;b&quot;:2},{&quot;a&quot;:1,&quot;c&quot;:2}),
  k.obj_diff_nested({&quot;a&quot;:1,&quot;b&quot;:{&quot;c&quot;:3}},{&quot;a&quot;:1,&quot;b&quot;:{&quot;d&quot;:3}}),
  k.obj_diff_nested({&quot;a&quot;:1,&quot;b&quot;:{&quot;c&quot;:{&quot;d&quot;:3}}},{&quot;a&quot;:1,&quot;b&quot;:{&quot;c&quot;:{&quot;e&quot;:3}}})
];
```"></span></td><td><span data-qmd="```clj
[{&quot;c&quot; 2} {&quot;b&quot; {&quot;d&quot; 3}} {&quot;b&quot; {&quot;c&quot; {&quot;e&quot; 3}}}]
```"></span></td></tr></tbody></table>
```

:::



### objify

decodes object if string

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/objify &quot;{}&quot;)
```"></span></td><td><span data-qmd="```js
k.objify(&quot;{}&quot;);
```"></span></td><td><span data-qmd="```clj
{}
```"></span></td></tr></tbody></table>
```

:::



### clone-nested

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/clone-nested {:a [1 2 3 {:b [4 5 6]}]})
```"></span></td><td><span data-qmd="```js
k.clone_nested({&quot;a&quot;:[1,2,3,{&quot;b&quot;:[4,5,6]}]});
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; [1 2 3 {&quot;b&quot; [4 5 6]}]}
```"></span></td></tr></tbody></table>
```

:::



### walk

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/walk [1 {:a {:b 3}}] (fn [x] (return (:? (k/is-number? x) (+ x 1) x))) k/identity)
```"></span></td><td><span data-qmd="```js
k.walk([1,{&quot;a&quot;:{&quot;b&quot;:3}}],function (x){
  return (&quot;number&quot; == (typeof x)) ? (x + 1) : x;
},k.identity);
```"></span></td><td><span data-qmd="```clj
[2 {&quot;a&quot; {&quot;b&quot; 4}}]
```"></span></td></tr></tbody></table>
```

:::



### get-data

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/get-data {:a 1, :b &quot;hello&quot;, :c {:d [1 2 (fn:&gt;)], :e &quot;hello&quot;, :f {:g (fn:&gt;), :h 2}}})
```"></span></td><td><span data-qmd="```js
k.get_data({
  &quot;a&quot;:1,
  &quot;b&quot;:&quot;hello&quot;,
  &quot;c&quot;:{
    &quot;d&quot;:[
      1,
      2,
      function (){
      return null;
    }
    ],
    &quot;e&quot;:&quot;hello&quot;,
    &quot;f&quot;:{
      &quot;g&quot;:function (){
        return null;
      },
      &quot;h&quot;:2
    }
  }
});
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; 1, &quot;b&quot; &quot;hello&quot;, &quot;c&quot; {&quot;d&quot; [1 2 &quot;&lt;function&gt;&quot;], &quot;f&quot; {&quot;g&quot; &quot;&lt;function&gt;&quot;, &quot;h&quot; 2}, &quot;e&quot; &quot;hello&quot;}}
```"></span></td></tr></tbody></table>
```

:::



### get-spec

::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive clay-table"><thead><tr><th>form</th><th>code</th><th>live</th></tr></thead><tbody><tr><td><span data-qmd="```clj
(k/get-spec {:a 1, :b &quot;hello&quot;, :c {:d [1 2 (fn:&gt;)], :e &quot;hello&quot;, :f {:g (fn:&gt;), :h 2}}})
```"></span></td><td><span data-qmd="```js
k.get_spec({
  &quot;a&quot;:1,
  &quot;b&quot;:&quot;hello&quot;,
  &quot;c&quot;:{
    &quot;d&quot;:[
      1,
      2,
      function (){
      return null;
    }
    ],
    &quot;e&quot;:&quot;hello&quot;,
    &quot;f&quot;:{
      &quot;g&quot;:function (){
        return null;
      },
      &quot;h&quot;:2
    }
  }
});
```"></span></td><td><span data-qmd="```clj
{&quot;a&quot; &quot;number&quot;, &quot;b&quot; &quot;string&quot;, &quot;c&quot; {&quot;d&quot; [&quot;number&quot; &quot;number&quot; &quot;function&quot;], &quot;f&quot; {&quot;g&quot; &quot;function&quot;, &quot;h&quot; &quot;number&quot;}, &quot;e&quot; &quot;string&quot;}}
```"></span></td></tr></tbody></table>
```

:::



```{=html}
<div style="background-color:grey;height:2px;width:100%;"></div>
```



```{=html}
<div><pre><small><small>source: <a href="https://github.com/scicloj/stdlang-docs/blob/main/notebooks/stdlang_book/walkthrough_js.clj">notebooks/stdlang_book/walkthrough_js.clj</a></small></small></pre></div>
```
